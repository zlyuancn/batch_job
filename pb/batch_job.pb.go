// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.1
// source: batch_job.proto

package pb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 速率类型
type RateType int32

const (
	RateType_RateType_RateSec       RateType = 0 // 标准限速
	RateType_RateType_Serialization RateType = 1 // 串行化限速
)

// Enum value maps for RateType.
var (
	RateType_name = map[int32]string{
		0: "RateType_RateSec",
		1: "RateType_Serialization",
	}
	RateType_value = map[string]int32{
		"RateType_RateSec":       0,
		"RateType_Serialization": 1,
	}
)

func (x RateType) Enum() *RateType {
	p := new(RateType)
	*p = x
	return p
}

func (x RateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RateType) Descriptor() protoreflect.EnumDescriptor {
	return file_batch_job_proto_enumTypes[0].Descriptor()
}

func (RateType) Type() protoreflect.EnumType {
	return &file_batch_job_proto_enumTypes[0]
}

func (x RateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RateType.Descriptor instead.
func (RateType) EnumDescriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{0}
}

// 执行类型
type ExecType int32

const (
	ExecType_ExecType_None         ExecType = 0
	ExecType_ExecType_HttpCallback ExecType = 1 // http回调
)

// Enum value maps for ExecType.
var (
	ExecType_name = map[int32]string{
		0: "ExecType_None",
		1: "ExecType_HttpCallback",
	}
	ExecType_value = map[string]int32{
		"ExecType_None":         0,
		"ExecType_HttpCallback": 1,
	}
)

func (x ExecType) Enum() *ExecType {
	p := new(ExecType)
	*p = x
	return p
}

func (x ExecType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecType) Descriptor() protoreflect.EnumDescriptor {
	return file_batch_job_proto_enumTypes[1].Descriptor()
}

func (ExecType) Type() protoreflect.EnumType {
	return &file_batch_job_proto_enumTypes[1]
}

func (x ExecType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecType.Descriptor instead.
func (ExecType) EnumDescriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{1}
}

// 业务状态
type BizStatus int32

const (
	BizStatus_BizStatus_None   BizStatus = 0 // 正常
	BizStatus_BizStatus_Hidden BizStatus = 1 // 隐藏
)

// Enum value maps for BizStatus.
var (
	BizStatus_name = map[int32]string{
		0: "BizStatus_None",
		1: "BizStatus_Hidden",
	}
	BizStatus_value = map[string]int32{
		"BizStatus_None":   0,
		"BizStatus_Hidden": 1,
	}
)

func (x BizStatus) Enum() *BizStatus {
	p := new(BizStatus)
	*p = x
	return p
}

func (x BizStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BizStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_batch_job_proto_enumTypes[2].Descriptor()
}

func (BizStatus) Type() protoreflect.EnumType {
	return &file_batch_job_proto_enumTypes[2]
}

func (x BizStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BizStatus.Descriptor instead.
func (BizStatus) EnumDescriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{2}
}

// 任务状态
type JobStatus int32

const (
	JobStatus_JobStatus_Created    JobStatus = 0 // 已创建
	JobStatus_JobStatus_WaitBizRun JobStatus = 1 // 等待业务主动启动
	JobStatus_JobStatus_Running    JobStatus = 2 // 运行中
	JobStatus_JobStatus_Finished   JobStatus = 3 // 已完成
	JobStatus_JobStatus_Stopping   JobStatus = 4 // 正在停止
	JobStatus_JobStatus_Stopped    JobStatus = 5 // 已停止
)

// Enum value maps for JobStatus.
var (
	JobStatus_name = map[int32]string{
		0: "JobStatus_Created",
		1: "JobStatus_WaitBizRun",
		2: "JobStatus_Running",
		3: "JobStatus_Finished",
		4: "JobStatus_Stopping",
		5: "JobStatus_Stopped",
	}
	JobStatus_value = map[string]int32{
		"JobStatus_Created":    0,
		"JobStatus_WaitBizRun": 1,
		"JobStatus_Running":    2,
		"JobStatus_Finished":   3,
		"JobStatus_Stopping":   4,
		"JobStatus_Stopped":    5,
	}
)

func (x JobStatus) Enum() *JobStatus {
	p := new(JobStatus)
	*p = x
	return p
}

func (x JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_batch_job_proto_enumTypes[3].Descriptor()
}

func (JobStatus) Type() protoreflect.EnumType {
	return &file_batch_job_proto_enumTypes[3]
}

func (x JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobStatus.Descriptor instead.
func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{3}
}

// 任务状态
type JobStatusQ int32

const (
	JobStatusQ_JobStatusQ_Created  JobStatusQ = 0 // 待启动: 已创建/已停止
	JobStatusQ_JobStatusQ_Running  JobStatusQ = 2 // 运行中: 运行中/等待业务主动启动/正在停止
	JobStatusQ_JobStatusQ_Finished JobStatusQ = 3 // 已完成
)

// Enum value maps for JobStatusQ.
var (
	JobStatusQ_name = map[int32]string{
		0: "JobStatusQ_Created",
		2: "JobStatusQ_Running",
		3: "JobStatusQ_Finished",
	}
	JobStatusQ_value = map[string]int32{
		"JobStatusQ_Created":  0,
		"JobStatusQ_Running":  2,
		"JobStatusQ_Finished": 3,
	}
)

func (x JobStatusQ) Enum() *JobStatusQ {
	p := new(JobStatusQ)
	*p = x
	return p
}

func (x JobStatusQ) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatusQ) Descriptor() protoreflect.EnumDescriptor {
	return file_batch_job_proto_enumTypes[4].Descriptor()
}

func (JobStatusQ) Type() protoreflect.EnumType {
	return &file_batch_job_proto_enumTypes[4]
}

func (x JobStatusQ) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobStatusQ.Descriptor instead.
func (JobStatusQ) EnumDescriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{4}
}

// 数据的日志类型
type DataLogType int32

const (
	DataLogType_DataLogType_Debug   DataLogType = 0 // 调试
	DataLogType_DataLogType_Info    DataLogType = 1 // 信息
	DataLogType_DataLogType_Warn    DataLogType = 2 // 警告
	DataLogType_DataLogType_Err     DataLogType = 3 // 错误
	DataLogType_DataLogType_ErrData DataLogType = 4 // 错误数据, 表示放弃处理这个数据了. 这个日志会被认为是错误计数
)

// Enum value maps for DataLogType.
var (
	DataLogType_name = map[int32]string{
		0: "DataLogType_Debug",
		1: "DataLogType_Info",
		2: "DataLogType_Warn",
		3: "DataLogType_Err",
		4: "DataLogType_ErrData",
	}
	DataLogType_value = map[string]int32{
		"DataLogType_Debug":   0,
		"DataLogType_Info":    1,
		"DataLogType_Warn":    2,
		"DataLogType_Err":     3,
		"DataLogType_ErrData": 4,
	}
)

func (x DataLogType) Enum() *DataLogType {
	p := new(DataLogType)
	*p = x
	return p
}

func (x DataLogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataLogType) Descriptor() protoreflect.EnumDescriptor {
	return file_batch_job_proto_enumTypes[5].Descriptor()
}

func (DataLogType) Type() protoreflect.EnumType {
	return &file_batch_job_proto_enumTypes[5]
}

func (x DataLogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataLogType.Descriptor instead.
func (DataLogType) EnumDescriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{5}
}

type AdminRegistryBizReq struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BizName               string                 `protobuf:"bytes,2,opt,name=bizName,proto3" json:"bizName,omitempty"`                              // 业务名
	Remark                string                 `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`                                // 备注
	ExecType              ExecType               `protobuf:"varint,4,opt,name=execType,proto3,enum=batch_job.ExecType" json:"execType,omitempty"`   // 执行类型
	CbBeforeCreate        string                 `protobuf:"bytes,5,opt,name=cbBeforeCreate,proto3" json:"cbBeforeCreate,omitempty"`                // 创建和修改任务回调url
	CbBeforeRun           string                 `protobuf:"bytes,6,opt,name=cbBeforeRun,proto3" json:"cbBeforeRun,omitempty"`                      // 启动前回调. 一旦配置, 则任务必须由业务主动调用 BizStartJob 执行任务. 否则任务将一直处于 JobStatus.WaitBizRun 状态
	CbProcess             string                 `protobuf:"bytes,7,opt,name=cbProcess,proto3" json:"cbProcess,omitempty"`                          // 处理任务回调. 必填
	CbProcessStop         string                 `protobuf:"bytes,8,opt,name=cbProcessStop,proto3" json:"cbProcessStop,omitempty"`                  // 任务停止回调. 用于业务方做一些清理. 选填
	CbBeforeCreateTimeout int32                  `protobuf:"varint,9,opt,name=cbBeforeCreateTimeout,proto3" json:"cbBeforeCreateTimeout,omitempty"` // 启动前回调超时秒数
	CbBeforeRunTimeout    int32                  `protobuf:"varint,10,opt,name=cbBeforeRunTimeout,proto3" json:"cbBeforeRunTimeout,omitempty"`      // 启动前回调超时秒数
	CbProcessTimeout      int32                  `protobuf:"varint,11,opt,name=cbProcessTimeout,proto3" json:"cbProcessTimeout,omitempty"`          // 处理任务回调超时秒数
	CbProcessStopTimeout  int32                  `protobuf:"varint,12,opt,name=cbProcessStopTimeout,proto3" json:"cbProcessStopTimeout,omitempty"`  // 处理任务停止回调超时秒数
	Op                    *OpInfoQ               `protobuf:"bytes,13,opt,name=op,proto3" json:"op,omitempty"`                                       // 操作信息
	Status                BizStatus              `protobuf:"varint,14,opt,name=status,proto3,enum=batch_job.BizStatus" json:"status,omitempty"`     // 状态 0=正常 1=隐藏
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *AdminRegistryBizReq) Reset() {
	*x = AdminRegistryBizReq{}
	mi := &file_batch_job_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminRegistryBizReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRegistryBizReq) ProtoMessage() {}

func (x *AdminRegistryBizReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRegistryBizReq.ProtoReflect.Descriptor instead.
func (*AdminRegistryBizReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{0}
}

func (x *AdminRegistryBizReq) GetBizName() string {
	if x != nil {
		return x.BizName
	}
	return ""
}

func (x *AdminRegistryBizReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AdminRegistryBizReq) GetExecType() ExecType {
	if x != nil {
		return x.ExecType
	}
	return ExecType_ExecType_None
}

func (x *AdminRegistryBizReq) GetCbBeforeCreate() string {
	if x != nil {
		return x.CbBeforeCreate
	}
	return ""
}

func (x *AdminRegistryBizReq) GetCbBeforeRun() string {
	if x != nil {
		return x.CbBeforeRun
	}
	return ""
}

func (x *AdminRegistryBizReq) GetCbProcess() string {
	if x != nil {
		return x.CbProcess
	}
	return ""
}

func (x *AdminRegistryBizReq) GetCbProcessStop() string {
	if x != nil {
		return x.CbProcessStop
	}
	return ""
}

func (x *AdminRegistryBizReq) GetCbBeforeCreateTimeout() int32 {
	if x != nil {
		return x.CbBeforeCreateTimeout
	}
	return 0
}

func (x *AdminRegistryBizReq) GetCbBeforeRunTimeout() int32 {
	if x != nil {
		return x.CbBeforeRunTimeout
	}
	return 0
}

func (x *AdminRegistryBizReq) GetCbProcessTimeout() int32 {
	if x != nil {
		return x.CbProcessTimeout
	}
	return 0
}

func (x *AdminRegistryBizReq) GetCbProcessStopTimeout() int32 {
	if x != nil {
		return x.CbProcessStopTimeout
	}
	return 0
}

func (x *AdminRegistryBizReq) GetOp() *OpInfoQ {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *AdminRegistryBizReq) GetStatus() BizStatus {
	if x != nil {
		return x.Status
	}
	return BizStatus_BizStatus_None
}

type AdminRegistryBizRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         int32                  `protobuf:"varint,1,opt,name=bizId,proto3" json:"bizId,omitempty"` // 创建的业务id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminRegistryBizRsp) Reset() {
	*x = AdminRegistryBizRsp{}
	mi := &file_batch_job_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminRegistryBizRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRegistryBizRsp) ProtoMessage() {}

func (x *AdminRegistryBizRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRegistryBizRsp.ProtoReflect.Descriptor instead.
func (*AdminRegistryBizRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{1}
}

func (x *AdminRegistryBizRsp) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

type AdminChangeBizReq struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BizId                 int32                  `protobuf:"varint,1,opt,name=bizId,proto3" json:"bizId,omitempty"`                                 // 业务id. 必填
	BizName               string                 `protobuf:"bytes,2,opt,name=bizName,proto3" json:"bizName,omitempty"`                              // 业务名
	Remark                string                 `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`                                // 备注
	ExecType              ExecType               `protobuf:"varint,4,opt,name=execType,proto3,enum=batch_job.ExecType" json:"execType,omitempty"`   // 执行类型
	CbBeforeCreate        string                 `protobuf:"bytes,5,opt,name=cbBeforeCreate,proto3" json:"cbBeforeCreate,omitempty"`                // 创建和修改任务回调url
	CbBeforeRun           string                 `protobuf:"bytes,6,opt,name=cbBeforeRun,proto3" json:"cbBeforeRun,omitempty"`                      // 启动前回调. 一旦配置, 则任务必须由业务主动调用 BizStartJob 执行任务. 否则任务将一直处于 JobStatus.WaitBizRun 状态
	CbProcess             string                 `protobuf:"bytes,7,opt,name=cbProcess,proto3" json:"cbProcess,omitempty"`                          // 处理任务回调. 必填
	CbProcessStop         string                 `protobuf:"bytes,8,opt,name=cbProcessStop,proto3" json:"cbProcessStop,omitempty"`                  // 任务停止回调. 用于业务方做一些清理. 选填
	CbBeforeCreateTimeout int32                  `protobuf:"varint,9,opt,name=cbBeforeCreateTimeout,proto3" json:"cbBeforeCreateTimeout,omitempty"` // 启动前回调超时秒数
	CbBeforeRunTimeout    int32                  `protobuf:"varint,10,opt,name=cbBeforeRunTimeout,proto3" json:"cbBeforeRunTimeout,omitempty"`      // 启动前回调超时秒数
	CbProcessTimeout      int32                  `protobuf:"varint,11,opt,name=cbProcessTimeout,proto3" json:"cbProcessTimeout,omitempty"`          // 处理任务回调超时秒数
	CbProcessStopTimeout  int32                  `protobuf:"varint,12,opt,name=cbProcessStopTimeout,proto3" json:"cbProcessStopTimeout,omitempty"`  // 处理任务停止回调超时秒数
	Op                    *OpInfoQ               `protobuf:"bytes,13,opt,name=op,proto3" json:"op,omitempty"`                                       // 操作信息
	Status                BizStatus              `protobuf:"varint,14,opt,name=status,proto3,enum=batch_job.BizStatus" json:"status,omitempty"`     // 状态 0=正常 1=隐藏
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *AdminChangeBizReq) Reset() {
	*x = AdminChangeBizReq{}
	mi := &file_batch_job_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminChangeBizReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminChangeBizReq) ProtoMessage() {}

func (x *AdminChangeBizReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminChangeBizReq.ProtoReflect.Descriptor instead.
func (*AdminChangeBizReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{2}
}

func (x *AdminChangeBizReq) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *AdminChangeBizReq) GetBizName() string {
	if x != nil {
		return x.BizName
	}
	return ""
}

func (x *AdminChangeBizReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AdminChangeBizReq) GetExecType() ExecType {
	if x != nil {
		return x.ExecType
	}
	return ExecType_ExecType_None
}

func (x *AdminChangeBizReq) GetCbBeforeCreate() string {
	if x != nil {
		return x.CbBeforeCreate
	}
	return ""
}

func (x *AdminChangeBizReq) GetCbBeforeRun() string {
	if x != nil {
		return x.CbBeforeRun
	}
	return ""
}

func (x *AdminChangeBizReq) GetCbProcess() string {
	if x != nil {
		return x.CbProcess
	}
	return ""
}

func (x *AdminChangeBizReq) GetCbProcessStop() string {
	if x != nil {
		return x.CbProcessStop
	}
	return ""
}

func (x *AdminChangeBizReq) GetCbBeforeCreateTimeout() int32 {
	if x != nil {
		return x.CbBeforeCreateTimeout
	}
	return 0
}

func (x *AdminChangeBizReq) GetCbBeforeRunTimeout() int32 {
	if x != nil {
		return x.CbBeforeRunTimeout
	}
	return 0
}

func (x *AdminChangeBizReq) GetCbProcessTimeout() int32 {
	if x != nil {
		return x.CbProcessTimeout
	}
	return 0
}

func (x *AdminChangeBizReq) GetCbProcessStopTimeout() int32 {
	if x != nil {
		return x.CbProcessStopTimeout
	}
	return 0
}

func (x *AdminChangeBizReq) GetOp() *OpInfoQ {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *AdminChangeBizReq) GetStatus() BizStatus {
	if x != nil {
		return x.Status
	}
	return BizStatus_BizStatus_None
}

type AdminChangeBizRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminChangeBizRsp) Reset() {
	*x = AdminChangeBizRsp{}
	mi := &file_batch_job_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminChangeBizRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminChangeBizRsp) ProtoMessage() {}

func (x *AdminChangeBizRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminChangeBizRsp.ProtoReflect.Descriptor instead.
func (*AdminChangeBizRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{3}
}

// 操作信息-请求
type OpInfoQ struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OpSource      string                 `protobuf:"bytes,1,opt,name=opSource,proto3" json:"opSource,omitempty"`     // 操作来源
	OpUserid      string                 `protobuf:"bytes,2,opt,name=opUserid,proto3" json:"opUserid,omitempty"`     // 操作用户id
	OpUserName    string                 `protobuf:"bytes,3,opt,name=opUserName,proto3" json:"opUserName,omitempty"` // 操作用户名
	OpRemark      string                 `protobuf:"bytes,4,opt,name=opRemark,proto3" json:"opRemark,omitempty"`     // 操作备注
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpInfoQ) Reset() {
	*x = OpInfoQ{}
	mi := &file_batch_job_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpInfoQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpInfoQ) ProtoMessage() {}

func (x *OpInfoQ) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpInfoQ.ProtoReflect.Descriptor instead.
func (*OpInfoQ) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{4}
}

func (x *OpInfoQ) GetOpSource() string {
	if x != nil {
		return x.OpSource
	}
	return ""
}

func (x *OpInfoQ) GetOpUserid() string {
	if x != nil {
		return x.OpUserid
	}
	return ""
}

func (x *OpInfoQ) GetOpUserName() string {
	if x != nil {
		return x.OpUserName
	}
	return ""
}

func (x *OpInfoQ) GetOpRemark() string {
	if x != nil {
		return x.OpRemark
	}
	return ""
}

// 操作信息-响应
type OpInfoA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OpSource      string                 `protobuf:"bytes,1,opt,name=opSource,proto3" json:"opSource,omitempty"`     // 操作来源
	OpUserid      string                 `protobuf:"bytes,2,opt,name=opUserid,proto3" json:"opUserid,omitempty"`     // 操作用户id
	OpUserName    string                 `protobuf:"bytes,3,opt,name=opUserName,proto3" json:"opUserName,omitempty"` // 操作用户名
	OpRemark      string                 `protobuf:"bytes,4,opt,name=opRemark,proto3" json:"opRemark,omitempty"`     // 操作描述
	OpTime        int64                  `protobuf:"varint,5,opt,name=opTime,proto3" json:"opTime,omitempty"`        // 操作秒级时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpInfoA) Reset() {
	*x = OpInfoA{}
	mi := &file_batch_job_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpInfoA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpInfoA) ProtoMessage() {}

func (x *OpInfoA) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpInfoA.ProtoReflect.Descriptor instead.
func (*OpInfoA) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{5}
}

func (x *OpInfoA) GetOpSource() string {
	if x != nil {
		return x.OpSource
	}
	return ""
}

func (x *OpInfoA) GetOpUserid() string {
	if x != nil {
		return x.OpUserid
	}
	return ""
}

func (x *OpInfoA) GetOpUserName() string {
	if x != nil {
		return x.OpUserName
	}
	return ""
}

func (x *OpInfoA) GetOpRemark() string {
	if x != nil {
		return x.OpRemark
	}
	return ""
}

func (x *OpInfoA) GetOpTime() int64 {
	if x != nil {
		return x.OpTime
	}
	return 0
}

// 业务操作历史-响应
type BizOpHistoryA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Op            *OpInfoA               `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`     // 操作信息
	Info          *BizInfoA              `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` // 相关数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizOpHistoryA) Reset() {
	*x = BizOpHistoryA{}
	mi := &file_batch_job_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizOpHistoryA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizOpHistoryA) ProtoMessage() {}

func (x *BizOpHistoryA) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizOpHistoryA.ProtoReflect.Descriptor instead.
func (*BizOpHistoryA) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{6}
}

func (x *BizOpHistoryA) GetOp() *OpInfoA {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *BizOpHistoryA) GetInfo() *BizInfoA {
	if x != nil {
		return x.Info
	}
	return nil
}

// 业务信息-响应
type BizInfoA struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BizId                 int32                  `protobuf:"varint,1,opt,name=bizId,proto3" json:"bizId,omitempty"`                                 // 业务id
	BizName               string                 `protobuf:"bytes,2,opt,name=bizName,proto3" json:"bizName,omitempty"`                              // 业务名
	Remark                string                 `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`                                // 备注
	ExecType              ExecType               `protobuf:"varint,4,opt,name=execType,proto3,enum=batch_job.ExecType" json:"execType,omitempty"`   // 执行类型
	CbBeforeCreate        string                 `protobuf:"bytes,5,opt,name=cbBeforeCreate,proto3" json:"cbBeforeCreate,omitempty"`                // 创建任务回调url
	CbBeforeRun           string                 `protobuf:"bytes,6,opt,name=cbBeforeRun,proto3" json:"cbBeforeRun,omitempty"`                      // 启动前回调. 一旦配置, 则任务必须由业务主动调用 BizStartJob 执行任务. 否则任务将一直处于 JobStatus.WaitBizRun 状态
	CbProcess             string                 `protobuf:"bytes,7,opt,name=cbProcess,proto3" json:"cbProcess,omitempty"`                          // 处理任务回调
	CbProcessStop         string                 `protobuf:"bytes,8,opt,name=cbProcessStop,proto3" json:"cbProcessStop,omitempty"`                  // 处理任务停止回调. 用于业务方做一些清理
	CbBeforeCreateTimeout int32                  `protobuf:"varint,9,opt,name=cbBeforeCreateTimeout,proto3" json:"cbBeforeCreateTimeout,omitempty"` // 启动前回调超时秒数
	CbBeforeRunTimeout    int32                  `protobuf:"varint,10,opt,name=cbBeforeRunTimeout,proto3" json:"cbBeforeRunTimeout,omitempty"`      // 启动前回调超时秒数
	CbProcessTimeout      int32                  `protobuf:"varint,11,opt,name=cbProcessTimeout,proto3" json:"cbProcessTimeout,omitempty"`          // 处理任务回调超时秒数
	CbProcessStopTimeout  int32                  `protobuf:"varint,12,opt,name=cbProcessStopTimeout,proto3" json:"cbProcessStopTimeout,omitempty"`  // 处理任务停止回调超时秒数
	Op                    *OpInfoA               `protobuf:"bytes,13,opt,name=op,proto3" json:"op,omitempty"`                                       // 操作信息
	Status                BizStatus              `protobuf:"varint,14,opt,name=status,proto3,enum=batch_job.BizStatus" json:"status,omitempty"`     // 状态 0=正常 1=隐藏
	CreateTime            int64                  `protobuf:"varint,15,opt,name=createTime,proto3" json:"createTime,omitempty"`                      // 创建时间秒级时间戳
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *BizInfoA) Reset() {
	*x = BizInfoA{}
	mi := &file_batch_job_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizInfoA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizInfoA) ProtoMessage() {}

func (x *BizInfoA) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizInfoA.ProtoReflect.Descriptor instead.
func (*BizInfoA) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{7}
}

func (x *BizInfoA) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *BizInfoA) GetBizName() string {
	if x != nil {
		return x.BizName
	}
	return ""
}

func (x *BizInfoA) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *BizInfoA) GetExecType() ExecType {
	if x != nil {
		return x.ExecType
	}
	return ExecType_ExecType_None
}

func (x *BizInfoA) GetCbBeforeCreate() string {
	if x != nil {
		return x.CbBeforeCreate
	}
	return ""
}

func (x *BizInfoA) GetCbBeforeRun() string {
	if x != nil {
		return x.CbBeforeRun
	}
	return ""
}

func (x *BizInfoA) GetCbProcess() string {
	if x != nil {
		return x.CbProcess
	}
	return ""
}

func (x *BizInfoA) GetCbProcessStop() string {
	if x != nil {
		return x.CbProcessStop
	}
	return ""
}

func (x *BizInfoA) GetCbBeforeCreateTimeout() int32 {
	if x != nil {
		return x.CbBeforeCreateTimeout
	}
	return 0
}

func (x *BizInfoA) GetCbBeforeRunTimeout() int32 {
	if x != nil {
		return x.CbBeforeRunTimeout
	}
	return 0
}

func (x *BizInfoA) GetCbProcessTimeout() int32 {
	if x != nil {
		return x.CbProcessTimeout
	}
	return 0
}

func (x *BizInfoA) GetCbProcessStopTimeout() int32 {
	if x != nil {
		return x.CbProcessStopTimeout
	}
	return 0
}

func (x *BizInfoA) GetOp() *OpInfoA {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *BizInfoA) GetStatus() BizStatus {
	if x != nil {
		return x.Status
	}
	return BizStatus_BizStatus_None
}

func (x *BizInfoA) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 业务信息-响应
type BizInfoByListA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         int32                  `protobuf:"varint,1,opt,name=bizId,proto3" json:"bizId,omitempty"`                               // 业务id. 必填
	BizName       string                 `protobuf:"bytes,2,opt,name=bizName,proto3" json:"bizName,omitempty"`                            // 业务名
	Remark        string                 `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`                              // 备注
	ExecType      ExecType               `protobuf:"varint,4,opt,name=execType,proto3,enum=batch_job.ExecType" json:"execType,omitempty"` // 执行类型
	Op            *OpInfoA               `protobuf:"bytes,13,opt,name=op,proto3" json:"op,omitempty"`                                     // 操作信息
	Status        BizStatus              `protobuf:"varint,14,opt,name=status,proto3,enum=batch_job.BizStatus" json:"status,omitempty"`   // 状态 0=正常 1=隐藏
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizInfoByListA) Reset() {
	*x = BizInfoByListA{}
	mi := &file_batch_job_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizInfoByListA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizInfoByListA) ProtoMessage() {}

func (x *BizInfoByListA) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizInfoByListA.ProtoReflect.Descriptor instead.
func (*BizInfoByListA) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{8}
}

func (x *BizInfoByListA) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *BizInfoByListA) GetBizName() string {
	if x != nil {
		return x.BizName
	}
	return ""
}

func (x *BizInfoByListA) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *BizInfoByListA) GetExecType() ExecType {
	if x != nil {
		return x.ExecType
	}
	return ExecType_ExecType_None
}

func (x *BizInfoByListA) GetOp() *OpInfoA {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *BizInfoByListA) GetStatus() BizStatus {
	if x != nil {
		return x.Status
	}
	return BizStatus_BizStatus_None
}

// 任务信息-响应
type JobInfoA struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	JobId            int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"`                                // 任务id
	JobName          string                 `protobuf:"bytes,2,opt,name=jobName,proto3" json:"jobName,omitempty"`                             // 任务名称
	BizId            int32                  `protobuf:"varint,3,opt,name=bizId,proto3" json:"bizId,omitempty"`                                // 业务id
	JobData          string                 `protobuf:"bytes,4,opt,name=jobData,proto3" json:"jobData,omitempty"`                             // 任务数据, 让业务知道应该做什么
	ProcessDataTotal int64                  `protobuf:"varint,5,opt,name=processDataTotal,proto3" json:"processDataTotal,omitempty"`          // 业务中需要处理数据总数
	ProcessedCount   int64                  `protobuf:"varint,6,opt,name=processedCount,proto3" json:"processedCount,omitempty"`              // 已处理过的数据量, 无论成功还是失败
	ErrLogCount      int64                  `protobuf:"varint,7,opt,name=errLogCount,proto3" json:"errLogCount,omitempty"`                    // 错误日志数
	Status           JobStatus              `protobuf:"varint,8,opt,name=status,proto3,enum=batch_job.JobStatus" json:"status,omitempty"`     // 任务状态
	CreateTime       int64                  `protobuf:"varint,9,opt,name=createTime,proto3" json:"createTime,omitempty"`                      // 创建时间秒级时间戳
	RateType         RateType               `protobuf:"varint,10,opt,name=rateType,proto3,enum=batch_job.RateType" json:"rateType,omitempty"` // 速率类型
	RateSec          int32                  `protobuf:"varint,11,opt,name=rateSec,proto3" json:"rateSec,omitempty"`                           // 每秒处理速率. 0表示不限制
	Op               *OpInfoA               `protobuf:"bytes,12,opt,name=op,proto3" json:"op,omitempty"`                                      // 操作信息
	StatusInfo       string                 `protobuf:"bytes,13,opt,name=statusInfo,proto3" json:"statusInfo,omitempty"`                      // 状态信息
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *JobInfoA) Reset() {
	*x = JobInfoA{}
	mi := &file_batch_job_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobInfoA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInfoA) ProtoMessage() {}

func (x *JobInfoA) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInfoA.ProtoReflect.Descriptor instead.
func (*JobInfoA) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{9}
}

func (x *JobInfoA) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *JobInfoA) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *JobInfoA) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *JobInfoA) GetJobData() string {
	if x != nil {
		return x.JobData
	}
	return ""
}

func (x *JobInfoA) GetProcessDataTotal() int64 {
	if x != nil {
		return x.ProcessDataTotal
	}
	return 0
}

func (x *JobInfoA) GetProcessedCount() int64 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

func (x *JobInfoA) GetErrLogCount() int64 {
	if x != nil {
		return x.ErrLogCount
	}
	return 0
}

func (x *JobInfoA) GetStatus() JobStatus {
	if x != nil {
		return x.Status
	}
	return JobStatus_JobStatus_Created
}

func (x *JobInfoA) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *JobInfoA) GetRateType() RateType {
	if x != nil {
		return x.RateType
	}
	return RateType_RateType_RateSec
}

func (x *JobInfoA) GetRateSec() int32 {
	if x != nil {
		return x.RateSec
	}
	return 0
}

func (x *JobInfoA) GetOp() *OpInfoA {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *JobInfoA) GetStatusInfo() string {
	if x != nil {
		return x.StatusInfo
	}
	return ""
}

// 任务基础信息-响应
type JobInfoByListA struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	JobId            int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"`                               // 任务id
	JobName          string                 `protobuf:"bytes,2,opt,name=jobName,proto3" json:"jobName,omitempty"`                            // 任务名称
	BizId            int32                  `protobuf:"varint,3,opt,name=bizId,proto3" json:"bizId,omitempty"`                               // 业务id
	ProcessDataTotal int64                  `protobuf:"varint,4,opt,name=processDataTotal,proto3" json:"processDataTotal,omitempty"`         // 业务中需要处理数据总数
	ProcessedCount   int64                  `protobuf:"varint,5,opt,name=processedCount,proto3" json:"processedCount,omitempty"`             // 已处理过的数据量, 无论成功还是失败
	ErrLogCount      int64                  `protobuf:"varint,6,opt,name=errLogCount,proto3" json:"errLogCount,omitempty"`                   // 错误日志数
	Status           JobStatus              `protobuf:"varint,7,opt,name=status,proto3,enum=batch_job.JobStatus" json:"status,omitempty"`    // 任务状态
	CreateTime       int64                  `protobuf:"varint,8,opt,name=createTime,proto3" json:"createTime,omitempty"`                     // 创建时间秒级时间戳
	RateType         RateType               `protobuf:"varint,9,opt,name=rateType,proto3,enum=batch_job.RateType" json:"rateType,omitempty"` // 速率类型
	RateSec          int32                  `protobuf:"varint,10,opt,name=rateSec,proto3" json:"rateSec,omitempty"`                          // 每秒处理速率. 0表示不限制
	Op               *OpInfoA               `protobuf:"bytes,11,opt,name=op,proto3" json:"op,omitempty"`                                     // 操作信息
	StatusInfo       string                 `protobuf:"bytes,12,opt,name=statusInfo,proto3" json:"statusInfo,omitempty"`                     // 状态信息
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *JobInfoByListA) Reset() {
	*x = JobInfoByListA{}
	mi := &file_batch_job_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobInfoByListA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInfoByListA) ProtoMessage() {}

func (x *JobInfoByListA) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInfoByListA.ProtoReflect.Descriptor instead.
func (*JobInfoByListA) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{10}
}

func (x *JobInfoByListA) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *JobInfoByListA) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *JobInfoByListA) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *JobInfoByListA) GetProcessDataTotal() int64 {
	if x != nil {
		return x.ProcessDataTotal
	}
	return 0
}

func (x *JobInfoByListA) GetProcessedCount() int64 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

func (x *JobInfoByListA) GetErrLogCount() int64 {
	if x != nil {
		return x.ErrLogCount
	}
	return 0
}

func (x *JobInfoByListA) GetStatus() JobStatus {
	if x != nil {
		return x.Status
	}
	return JobStatus_JobStatus_Created
}

func (x *JobInfoByListA) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *JobInfoByListA) GetRateType() RateType {
	if x != nil {
		return x.RateType
	}
	return RateType_RateType_RateSec
}

func (x *JobInfoByListA) GetRateSec() int32 {
	if x != nil {
		return x.RateSec
	}
	return 0
}

func (x *JobInfoByListA) GetOp() *OpInfoA {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *JobInfoByListA) GetStatusInfo() string {
	if x != nil {
		return x.StatusInfo
	}
	return ""
}

// 日志-请求
type DataLogQ struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataId        string                 `protobuf:"bytes,1,opt,name=dataId,proto3" json:"dataId,omitempty"`                               // 数据id
	Remark        string                 `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`                               // 备注
	Extend        string                 `protobuf:"bytes,3,opt,name=extend,proto3" json:"extend,omitempty"`                               // 扩展数据
	LogType       DataLogType            `protobuf:"varint,4,opt,name=logType,proto3,enum=batch_job.DataLogType" json:"logType,omitempty"` // 日志类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataLogQ) Reset() {
	*x = DataLogQ{}
	mi := &file_batch_job_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataLogQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataLogQ) ProtoMessage() {}

func (x *DataLogQ) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataLogQ.ProtoReflect.Descriptor instead.
func (*DataLogQ) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{11}
}

func (x *DataLogQ) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

func (x *DataLogQ) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DataLogQ) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *DataLogQ) GetLogType() DataLogType {
	if x != nil {
		return x.LogType
	}
	return DataLogType_DataLogType_Debug
}

// 日志-响应
type LogInfoByListA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataId        string                 `protobuf:"bytes,1,opt,name=dataId,proto3" json:"dataId,omitempty"`                               // 数据id
	Remark        string                 `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`                               // 备注
	Extend        string                 `protobuf:"bytes,3,opt,name=extend,proto3" json:"extend,omitempty"`                               // 扩展数据
	LogType       DataLogType            `protobuf:"varint,4,opt,name=logType,proto3,enum=batch_job.DataLogType" json:"logType,omitempty"` // 日志类型
	CreateTime    int64                  `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`                      // 创建时间秒级时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogInfoByListA) Reset() {
	*x = LogInfoByListA{}
	mi := &file_batch_job_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogInfoByListA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInfoByListA) ProtoMessage() {}

func (x *LogInfoByListA) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInfoByListA.ProtoReflect.Descriptor instead.
func (*LogInfoByListA) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{12}
}

func (x *LogInfoByListA) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

func (x *LogInfoByListA) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *LogInfoByListA) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *LogInfoByListA) GetLogType() DataLogType {
	if x != nil {
		return x.LogType
	}
	return DataLogType_DataLogType_Debug
}

func (x *LogInfoByListA) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type AdminCreateJobReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BizId            int32                  `protobuf:"varint,1,opt,name=bizId,proto3" json:"bizId,omitempty"`                               // 业务id. 必填
	JobName          string                 `protobuf:"bytes,2,opt,name=jobName,proto3" json:"jobName,omitempty"`                            // 任务名称
	JobData          string                 `protobuf:"bytes,3,opt,name=jobData,proto3" json:"jobData,omitempty"`                            // 任务数据, 让业务知道应该做什么
	ProcessDataTotal int64                  `protobuf:"varint,4,opt,name=processDataTotal,proto3" json:"processDataTotal,omitempty"`         // 需要处理数据总数
	ProcessedCount   int64                  `protobuf:"varint,5,opt,name=processedCount,proto3" json:"processedCount,omitempty"`             // 已处理过的数据量, 无论成功还是失败
	RateType         RateType               `protobuf:"varint,6,opt,name=rateType,proto3,enum=batch_job.RateType" json:"rateType,omitempty"` // 速率类型
	RateSec          int32                  `protobuf:"varint,7,opt,name=rateSec,proto3" json:"rateSec,omitempty"`                           // 每秒处理速率. 0表示不限制
	Op               *OpInfoQ               `protobuf:"bytes,8,opt,name=op,proto3" json:"op,omitempty"`                                      // 操作信息
	StartNow         bool                   `protobuf:"varint,9,opt,name=startNow,proto3" json:"startNow,omitempty"`                         // 创建后是否立即启动
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AdminCreateJobReq) Reset() {
	*x = AdminCreateJobReq{}
	mi := &file_batch_job_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminCreateJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateJobReq) ProtoMessage() {}

func (x *AdminCreateJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateJobReq.ProtoReflect.Descriptor instead.
func (*AdminCreateJobReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{13}
}

func (x *AdminCreateJobReq) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *AdminCreateJobReq) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *AdminCreateJobReq) GetJobData() string {
	if x != nil {
		return x.JobData
	}
	return ""
}

func (x *AdminCreateJobReq) GetProcessDataTotal() int64 {
	if x != nil {
		return x.ProcessDataTotal
	}
	return 0
}

func (x *AdminCreateJobReq) GetProcessedCount() int64 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

func (x *AdminCreateJobReq) GetRateType() RateType {
	if x != nil {
		return x.RateType
	}
	return RateType_RateType_RateSec
}

func (x *AdminCreateJobReq) GetRateSec() int32 {
	if x != nil {
		return x.RateSec
	}
	return 0
}

func (x *AdminCreateJobReq) GetOp() *OpInfoQ {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *AdminCreateJobReq) GetStartNow() bool {
	if x != nil {
		return x.StartNow
	}
	return false
}

type AdminCreateJobRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"` // 创建的任务id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminCreateJobRsp) Reset() {
	*x = AdminCreateJobRsp{}
	mi := &file_batch_job_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminCreateJobRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateJobRsp) ProtoMessage() {}

func (x *AdminCreateJobRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateJobRsp.ProtoReflect.Descriptor instead.
func (*AdminCreateJobRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{14}
}

func (x *AdminCreateJobRsp) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

type AdminChangeJobReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BizId            int32                  `protobuf:"varint,1,opt,name=bizId,proto3" json:"bizId,omitempty"`                               // 业务id. 必填
	JobName          string                 `protobuf:"bytes,2,opt,name=jobName,proto3" json:"jobName,omitempty"`                            // 任务名称
	JobData          string                 `protobuf:"bytes,3,opt,name=jobData,proto3" json:"jobData,omitempty"`                            // 任务数据, 让业务知道应该做什么
	ProcessDataTotal int64                  `protobuf:"varint,4,opt,name=processDataTotal,proto3" json:"processDataTotal,omitempty"`         // 需要处理数据总数
	ProcessedCount   int64                  `protobuf:"varint,5,opt,name=processedCount,proto3" json:"processedCount,omitempty"`             // 已处理过的数据量, 无论成功还是失败
	RateType         RateType               `protobuf:"varint,6,opt,name=rateType,proto3,enum=batch_job.RateType" json:"rateType,omitempty"` // 速率类型
	RateSec          int32                  `protobuf:"varint,7,opt,name=rateSec,proto3" json:"rateSec,omitempty"`                           // 每秒处理速率. 0表示不限制
	Op               *OpInfoQ               `protobuf:"bytes,8,opt,name=op,proto3" json:"op,omitempty"`                                      // 操作信息
	JobId            int64                  `protobuf:"varint,9,opt,name=jobId,proto3" json:"jobId,omitempty"`                               // 任务id
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AdminChangeJobReq) Reset() {
	*x = AdminChangeJobReq{}
	mi := &file_batch_job_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminChangeJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminChangeJobReq) ProtoMessage() {}

func (x *AdminChangeJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminChangeJobReq.ProtoReflect.Descriptor instead.
func (*AdminChangeJobReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{15}
}

func (x *AdminChangeJobReq) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *AdminChangeJobReq) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *AdminChangeJobReq) GetJobData() string {
	if x != nil {
		return x.JobData
	}
	return ""
}

func (x *AdminChangeJobReq) GetProcessDataTotal() int64 {
	if x != nil {
		return x.ProcessDataTotal
	}
	return 0
}

func (x *AdminChangeJobReq) GetProcessedCount() int64 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

func (x *AdminChangeJobReq) GetRateType() RateType {
	if x != nil {
		return x.RateType
	}
	return RateType_RateType_RateSec
}

func (x *AdminChangeJobReq) GetRateSec() int32 {
	if x != nil {
		return x.RateSec
	}
	return 0
}

func (x *AdminChangeJobReq) GetOp() *OpInfoQ {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *AdminChangeJobReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

type AdminChangeJobRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminChangeJobRsp) Reset() {
	*x = AdminChangeJobRsp{}
	mi := &file_batch_job_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminChangeJobRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminChangeJobRsp) ProtoMessage() {}

func (x *AdminChangeJobRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminChangeJobRsp.ProtoReflect.Descriptor instead.
func (*AdminChangeJobRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{16}
}

type AdminStartJobReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"` // 创建的任务id. 必填
	Op            *OpInfoQ               `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`        // 操作信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminStartJobReq) Reset() {
	*x = AdminStartJobReq{}
	mi := &file_batch_job_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminStartJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminStartJobReq) ProtoMessage() {}

func (x *AdminStartJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminStartJobReq.ProtoReflect.Descriptor instead.
func (*AdminStartJobReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{17}
}

func (x *AdminStartJobReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *AdminStartJobReq) GetOp() *OpInfoQ {
	if x != nil {
		return x.Op
	}
	return nil
}

type AdminStartJobRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminStartJobRsp) Reset() {
	*x = AdminStartJobRsp{}
	mi := &file_batch_job_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminStartJobRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminStartJobRsp) ProtoMessage() {}

func (x *AdminStartJobRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminStartJobRsp.ProtoReflect.Descriptor instead.
func (*AdminStartJobRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{18}
}

type AdminStopJobReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"` // 创建的任务id. 必填
	Op            *OpInfoQ               `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`        // 操作信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminStopJobReq) Reset() {
	*x = AdminStopJobReq{}
	mi := &file_batch_job_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminStopJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminStopJobReq) ProtoMessage() {}

func (x *AdminStopJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminStopJobReq.ProtoReflect.Descriptor instead.
func (*AdminStopJobReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{19}
}

func (x *AdminStopJobReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *AdminStopJobReq) GetOp() *OpInfoQ {
	if x != nil {
		return x.Op
	}
	return nil
}

type AdminStopJobRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminStopJobRsp) Reset() {
	*x = AdminStopJobRsp{}
	mi := &file_batch_job_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminStopJobRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminStopJobRsp) ProtoMessage() {}

func (x *AdminStopJobRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminStopJobRsp.ProtoReflect.Descriptor instead.
func (*AdminStopJobRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{20}
}

type QueryAllBizNameReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAllBizNameReq) Reset() {
	*x = QueryAllBizNameReq{}
	mi := &file_batch_job_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAllBizNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllBizNameReq) ProtoMessage() {}

func (x *QueryAllBizNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAllBizNameReq.ProtoReflect.Descriptor instead.
func (*QueryAllBizNameReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{21}
}

type QueryAllBizNameRsp struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Line          []*QueryAllBizNameRsp_LineA `protobuf:"bytes,1,rep,name=line,proto3" json:"line,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAllBizNameRsp) Reset() {
	*x = QueryAllBizNameRsp{}
	mi := &file_batch_job_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAllBizNameRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllBizNameRsp) ProtoMessage() {}

func (x *QueryAllBizNameRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAllBizNameRsp.ProtoReflect.Descriptor instead.
func (*QueryAllBizNameRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{22}
}

func (x *QueryAllBizNameRsp) GetLine() []*QueryAllBizNameRsp_LineA {
	if x != nil {
		return x.Line
	}
	return nil
}

type QueryBizInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         int32                  `protobuf:"varint,1,opt,name=bizId,proto3" json:"bizId,omitempty"`                 // 创建的业务id. 必填
	NeedOpHistory bool                   `protobuf:"varint,2,opt,name=needOpHistory,proto3" json:"needOpHistory,omitempty"` // 是否需要操作历史
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBizInfoReq) Reset() {
	*x = QueryBizInfoReq{}
	mi := &file_batch_job_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBizInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBizInfoReq) ProtoMessage() {}

func (x *QueryBizInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBizInfoReq.ProtoReflect.Descriptor instead.
func (*QueryBizInfoReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{23}
}

func (x *QueryBizInfoReq) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *QueryBizInfoReq) GetNeedOpHistory() bool {
	if x != nil {
		return x.NeedOpHistory
	}
	return false
}

type QueryBizInfoRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Line          *BizInfoA              `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"` // 业务信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBizInfoRsp) Reset() {
	*x = QueryBizInfoRsp{}
	mi := &file_batch_job_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBizInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBizInfoRsp) ProtoMessage() {}

func (x *QueryBizInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBizInfoRsp.ProtoReflect.Descriptor instead.
func (*QueryBizInfoRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{24}
}

func (x *QueryBizInfoRsp) GetLine() *BizInfoA {
	if x != nil {
		return x.Line
	}
	return nil
}

type QueryBizListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                              // 页号, 从1开始
	PageSize      int32                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`                      // 每页返回数量, 最少返回5条
	BizId         int32                  `protobuf:"varint,3,opt,name=bizId,proto3" json:"bizId,omitempty"`                            // 业务id
	OpUser        string                 `protobuf:"bytes,4,opt,name=opUser,proto3" json:"opUser,omitempty"`                           // 操作人
	Status        BizStatus              `protobuf:"varint,5,opt,name=status,proto3,enum=batch_job.BizStatus" json:"status,omitempty"` // 状态 0=正常 1=隐藏
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBizListReq) Reset() {
	*x = QueryBizListReq{}
	mi := &file_batch_job_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBizListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBizListReq) ProtoMessage() {}

func (x *QueryBizListReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBizListReq.ProtoReflect.Descriptor instead.
func (*QueryBizListReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{25}
}

func (x *QueryBizListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryBizListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryBizListReq) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *QueryBizListReq) GetOpUser() string {
	if x != nil {
		return x.OpUser
	}
	return ""
}

func (x *QueryBizListReq) GetStatus() BizStatus {
	if x != nil {
		return x.Status
	}
	return BizStatus_BizStatus_None
}

type QueryBizListRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`       // 总条数
	PageSize      int32                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // 当前分一页预期返回条数
	Line          []*BizInfoByListA      `protobuf:"bytes,3,rep,name=line,proto3" json:"line,omitempty"`          // 业务信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBizListRsp) Reset() {
	*x = QueryBizListRsp{}
	mi := &file_batch_job_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBizListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBizListRsp) ProtoMessage() {}

func (x *QueryBizListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBizListRsp.ProtoReflect.Descriptor instead.
func (*QueryBizListRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{26}
}

func (x *QueryBizListRsp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryBizListRsp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryBizListRsp) GetLine() []*BizInfoByListA {
	if x != nil {
		return x.Line
	}
	return nil
}

type QueryJobInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"`                 // 创建的任务id. 必填
	NeedOpHistory bool                   `protobuf:"varint,2,opt,name=needOpHistory,proto3" json:"needOpHistory,omitempty"` // 是否需要操作历史
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryJobInfoReq) Reset() {
	*x = QueryJobInfoReq{}
	mi := &file_batch_job_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryJobInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobInfoReq) ProtoMessage() {}

func (x *QueryJobInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobInfoReq.ProtoReflect.Descriptor instead.
func (*QueryJobInfoReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{27}
}

func (x *QueryJobInfoReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *QueryJobInfoReq) GetNeedOpHistory() bool {
	if x != nil {
		return x.NeedOpHistory
	}
	return false
}

type QueryJobInfoRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Line          *JobInfoA              `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"` // 任务基础信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryJobInfoRsp) Reset() {
	*x = QueryJobInfoRsp{}
	mi := &file_batch_job_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryJobInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobInfoRsp) ProtoMessage() {}

func (x *QueryJobInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobInfoRsp.ProtoReflect.Descriptor instead.
func (*QueryJobInfoRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{28}
}

func (x *QueryJobInfoRsp) GetLine() *JobInfoA {
	if x != nil {
		return x.Line
	}
	return nil
}

type QueryJobListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                               // 页号, 从1开始
	PageSize      int32                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`                       // 每页返回数量, 最少返回5条
	BizId         int32                  `protobuf:"varint,3,opt,name=bizId,proto3" json:"bizId,omitempty"`                             // 业务id
	Status        JobStatusQ             `protobuf:"varint,4,opt,name=status,proto3,enum=batch_job.JobStatusQ" json:"status,omitempty"` // 任务状态
	StartTime     int64                  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`                     // 开始时间, 秒级时间戳. 0表示不限制
	EndTime       int64                  `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`                         // 结束时间, 秒级时间戳. 0表示不限制
	OpUser        string                 `protobuf:"bytes,7,opt,name=opUser,proto3" json:"opUser,omitempty"`                            // 操作人
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryJobListReq) Reset() {
	*x = QueryJobListReq{}
	mi := &file_batch_job_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryJobListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobListReq) ProtoMessage() {}

func (x *QueryJobListReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobListReq.ProtoReflect.Descriptor instead.
func (*QueryJobListReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{29}
}

func (x *QueryJobListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryJobListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryJobListReq) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *QueryJobListReq) GetStatus() JobStatusQ {
	if x != nil {
		return x.Status
	}
	return JobStatusQ_JobStatusQ_Created
}

func (x *QueryJobListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryJobListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryJobListReq) GetOpUser() string {
	if x != nil {
		return x.OpUser
	}
	return ""
}

type QueryJobListRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`       // 总条数
	PageSize      int32                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"` // 当前分一页预期返回条数
	Line          []*JobInfoByListA      `protobuf:"bytes,3,rep,name=line,proto3" json:"line,omitempty"`          // 基础任务信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryJobListRsp) Reset() {
	*x = QueryJobListRsp{}
	mi := &file_batch_job_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryJobListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobListRsp) ProtoMessage() {}

func (x *QueryJobListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobListRsp.ProtoReflect.Descriptor instead.
func (*QueryJobListRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{30}
}

func (x *QueryJobListRsp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryJobListRsp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryJobListRsp) GetLine() []*JobInfoByListA {
	if x != nil {
		return x.Line
	}
	return nil
}

type QueryJobDataLogReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"`                                       // 创建的任务id. 必填
	NextCursor    int64                  `protobuf:"varint,2,opt,name=nextCursor,proto3" json:"nextCursor,omitempty"`                             // 下一页数据游标
	PageSize      int32                  `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`                                 // 每页返回数量, 最少返回5条
	StartTime     int64                  `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`                               // 开始时间, 秒级时间戳. 0表示不限制
	EndTime       int64                  `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`                                   // 结束时间, 秒级时间戳. 0表示不限制
	LogType       []DataLogType          `protobuf:"varint,6,rep,packed,name=logType,proto3,enum=batch_job.DataLogType" json:"logType,omitempty"` // 日志类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryJobDataLogReq) Reset() {
	*x = QueryJobDataLogReq{}
	mi := &file_batch_job_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryJobDataLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobDataLogReq) ProtoMessage() {}

func (x *QueryJobDataLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobDataLogReq.ProtoReflect.Descriptor instead.
func (*QueryJobDataLogReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{31}
}

func (x *QueryJobDataLogReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *QueryJobDataLogReq) GetNextCursor() int64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *QueryJobDataLogReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryJobDataLogReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryJobDataLogReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryJobDataLogReq) GetLogType() []DataLogType {
	if x != nil {
		return x.LogType
	}
	return nil
}

type QueryJobDataLogRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NextCursor    int64                  `protobuf:"varint,1,opt,name=nextCursor,proto3" json:"nextCursor,omitempty"` // 下一页数据游标
	PageSize      int32                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`     // 当前分一页预期返回条数
	Line          []*LogInfoByListA      `protobuf:"bytes,3,rep,name=line,proto3" json:"line,omitempty"`              // 日志
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryJobDataLogRsp) Reset() {
	*x = QueryJobDataLogRsp{}
	mi := &file_batch_job_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryJobDataLogRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobDataLogRsp) ProtoMessage() {}

func (x *QueryJobDataLogRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobDataLogRsp.ProtoReflect.Descriptor instead.
func (*QueryJobDataLogRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{32}
}

func (x *QueryJobDataLogRsp) GetNextCursor() int64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *QueryJobDataLogRsp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryJobDataLogRsp) GetLine() []*LogInfoByListA {
	if x != nil {
		return x.Line
	}
	return nil
}

type BizStartJobReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"` // 创建的任务id. 必填
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizStartJobReq) Reset() {
	*x = BizStartJobReq{}
	mi := &file_batch_job_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizStartJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizStartJobReq) ProtoMessage() {}

func (x *BizStartJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizStartJobReq.ProtoReflect.Descriptor instead.
func (*BizStartJobReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{33}
}

func (x *BizStartJobReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

type BizStartJobRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizStartJobRsp) Reset() {
	*x = BizStartJobRsp{}
	mi := &file_batch_job_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizStartJobRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizStartJobRsp) ProtoMessage() {}

func (x *BizStartJobRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizStartJobRsp.ProtoReflect.Descriptor instead.
func (*BizStartJobRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{34}
}

type BizStopJobReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"` // 创建的任务id. 必填
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizStopJobReq) Reset() {
	*x = BizStopJobReq{}
	mi := &file_batch_job_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizStopJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizStopJobReq) ProtoMessage() {}

func (x *BizStopJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizStopJobReq.ProtoReflect.Descriptor instead.
func (*BizStopJobReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{35}
}

func (x *BizStopJobReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

type BizStopJobRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizStopJobRsp) Reset() {
	*x = BizStopJobRsp{}
	mi := &file_batch_job_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizStopJobRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizStopJobRsp) ProtoMessage() {}

func (x *BizStopJobRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizStopJobRsp.ProtoReflect.Descriptor instead.
func (*BizStopJobRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{36}
}

type BizUpdateJobDataReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	JobId            int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"`                       // 创建的任务id. 必填
	JobData          string                 `protobuf:"bytes,2,opt,name=jobData,proto3" json:"jobData,omitempty"`                    // 任务数据, 让业务知道应该做什么. 空值则不会更新这个数据
	BizCustomData    string                 `protobuf:"bytes,3,opt,name=bizCustomData,proto3" json:"bizCustomData,omitempty"`        // 任务的自定义数据. 空值则不会更新这个数据
	ProcessDataTotal int64                  `protobuf:"varint,4,opt,name=processDataTotal,proto3" json:"processDataTotal,omitempty"` // 需要处理数据总数. 空值则不会更新这个数据
	ProcessedCount   int64                  `protobuf:"varint,5,opt,name=processedCount,proto3" json:"processedCount,omitempty"`     // 已处理过的数据量, 无论成功还是失败. 空值则不会更新这个数据
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BizUpdateJobDataReq) Reset() {
	*x = BizUpdateJobDataReq{}
	mi := &file_batch_job_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizUpdateJobDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizUpdateJobDataReq) ProtoMessage() {}

func (x *BizUpdateJobDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizUpdateJobDataReq.ProtoReflect.Descriptor instead.
func (*BizUpdateJobDataReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{37}
}

func (x *BizUpdateJobDataReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *BizUpdateJobDataReq) GetJobData() string {
	if x != nil {
		return x.JobData
	}
	return ""
}

func (x *BizUpdateJobDataReq) GetBizCustomData() string {
	if x != nil {
		return x.BizCustomData
	}
	return ""
}

func (x *BizUpdateJobDataReq) GetProcessDataTotal() int64 {
	if x != nil {
		return x.ProcessDataTotal
	}
	return 0
}

func (x *BizUpdateJobDataReq) GetProcessedCount() int64 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

type BizUpdateJobDataRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizUpdateJobDataRsp) Reset() {
	*x = BizUpdateJobDataRsp{}
	mi := &file_batch_job_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizUpdateJobDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizUpdateJobDataRsp) ProtoMessage() {}

func (x *BizUpdateJobDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizUpdateJobDataRsp.ProtoReflect.Descriptor instead.
func (*BizUpdateJobDataRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{38}
}

type BizAddDataLogReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"` // 创建的任务id. 必填
	Log           []*DataLogQ            `protobuf:"bytes,2,rep,name=log,proto3" json:"log,omitempty"`      // 日志内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizAddDataLogReq) Reset() {
	*x = BizAddDataLogReq{}
	mi := &file_batch_job_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizAddDataLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizAddDataLogReq) ProtoMessage() {}

func (x *BizAddDataLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizAddDataLogReq.ProtoReflect.Descriptor instead.
func (*BizAddDataLogReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{39}
}

func (x *BizAddDataLogReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *BizAddDataLogReq) GetLog() []*DataLogQ {
	if x != nil {
		return x.Log
	}
	return nil
}

type BizAddDataLogRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizAddDataLogRsp) Reset() {
	*x = BizAddDataLogRsp{}
	mi := &file_batch_job_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizAddDataLogRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizAddDataLogRsp) ProtoMessage() {}

func (x *BizAddDataLogRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizAddDataLogRsp.ProtoReflect.Descriptor instead.
func (*BizAddDataLogRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{40}
}

// 创建和修改任务前回调参数
type JobBeforeCreateAndChangeReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	JobName          string                 `protobuf:"bytes,1,opt,name=jobName,proto3" json:"jobName,omitempty"`                            // 任务名称
	BizId            int32                  `protobuf:"varint,2,opt,name=bizId,proto3" json:"bizId,omitempty"`                               // 业务id. 必填
	JobData          string                 `protobuf:"bytes,3,opt,name=jobData,proto3" json:"jobData,omitempty"`                            // 任务数据, 让业务知道应该做什么
	ProcessDataTotal int64                  `protobuf:"varint,4,opt,name=processDataTotal,proto3" json:"processDataTotal,omitempty"`         // 需要处理数据总数
	ProcessedCount   int64                  `protobuf:"varint,5,opt,name=processedCount,proto3" json:"processedCount,omitempty"`             // 已处理过的数据量, 无论成功还是失败
	RateType         RateType               `protobuf:"varint,6,opt,name=rateType,proto3,enum=batch_job.RateType" json:"rateType,omitempty"` // 速率类型
	RateSec          int32                  `protobuf:"varint,7,opt,name=rateSec,proto3" json:"rateSec,omitempty"`                           // 每秒处理速率. 0表示不限制
	JobId            int64                  `protobuf:"varint,8,opt,name=jobId,proto3" json:"jobId,omitempty"`                               // 任务id
	IsCreate         bool                   `protobuf:"varint,9,opt,name=isCreate,proto3" json:"isCreate,omitempty"`                         // 是否为创建
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *JobBeforeCreateAndChangeReq) Reset() {
	*x = JobBeforeCreateAndChangeReq{}
	mi := &file_batch_job_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobBeforeCreateAndChangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobBeforeCreateAndChangeReq) ProtoMessage() {}

func (x *JobBeforeCreateAndChangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobBeforeCreateAndChangeReq.ProtoReflect.Descriptor instead.
func (*JobBeforeCreateAndChangeReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{41}
}

func (x *JobBeforeCreateAndChangeReq) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *JobBeforeCreateAndChangeReq) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *JobBeforeCreateAndChangeReq) GetJobData() string {
	if x != nil {
		return x.JobData
	}
	return ""
}

func (x *JobBeforeCreateAndChangeReq) GetProcessDataTotal() int64 {
	if x != nil {
		return x.ProcessDataTotal
	}
	return 0
}

func (x *JobBeforeCreateAndChangeReq) GetProcessedCount() int64 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

func (x *JobBeforeCreateAndChangeReq) GetRateType() RateType {
	if x != nil {
		return x.RateType
	}
	return RateType_RateType_RateSec
}

func (x *JobBeforeCreateAndChangeReq) GetRateSec() int32 {
	if x != nil {
		return x.RateSec
	}
	return 0
}

func (x *JobBeforeCreateAndChangeReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *JobBeforeCreateAndChangeReq) GetIsCreate() bool {
	if x != nil {
		return x.IsCreate
	}
	return false
}

type JobBeforeCreateAndChangeRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobBeforeCreateAndChangeRsp) Reset() {
	*x = JobBeforeCreateAndChangeRsp{}
	mi := &file_batch_job_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobBeforeCreateAndChangeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobBeforeCreateAndChangeRsp) ProtoMessage() {}

func (x *JobBeforeCreateAndChangeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobBeforeCreateAndChangeRsp.ProtoReflect.Descriptor instead.
func (*JobBeforeCreateAndChangeRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{42}
}

// 任务启动前回调参数
type JobBeforeRunReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	JobId            int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"`                       // 任务id
	JobName          string                 `protobuf:"bytes,2,opt,name=jobName,proto3" json:"jobName,omitempty"`                    // 任务名称
	BizId            int32                  `protobuf:"varint,3,opt,name=bizId,proto3" json:"bizId,omitempty"`                       // 业务id
	BizName          string                 `protobuf:"bytes,4,opt,name=bizName,proto3" json:"bizName,omitempty"`                    // 业务名
	JobData          string                 `protobuf:"bytes,5,opt,name=jobData,proto3" json:"jobData,omitempty"`                    // 任务数据, 让业务知道应该做什么
	ProcessDataTotal int64                  `protobuf:"varint,6,opt,name=processDataTotal,proto3" json:"processDataTotal,omitempty"` // 业务中需要处理数据总数
	ProcessedCount   int64                  `protobuf:"varint,7,opt,name=processedCount,proto3" json:"processedCount,omitempty"`     // 已处理过的数据量, 无论成功还是失败
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *JobBeforeRunReq) Reset() {
	*x = JobBeforeRunReq{}
	mi := &file_batch_job_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobBeforeRunReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobBeforeRunReq) ProtoMessage() {}

func (x *JobBeforeRunReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobBeforeRunReq.ProtoReflect.Descriptor instead.
func (*JobBeforeRunReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{43}
}

func (x *JobBeforeRunReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *JobBeforeRunReq) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *JobBeforeRunReq) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *JobBeforeRunReq) GetBizName() string {
	if x != nil {
		return x.BizName
	}
	return ""
}

func (x *JobBeforeRunReq) GetJobData() string {
	if x != nil {
		return x.JobData
	}
	return ""
}

func (x *JobBeforeRunReq) GetProcessDataTotal() int64 {
	if x != nil {
		return x.ProcessDataTotal
	}
	return 0
}

func (x *JobBeforeRunReq) GetProcessedCount() int64 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

type JobBeforeRunRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobBeforeRunRsp) Reset() {
	*x = JobBeforeRunRsp{}
	mi := &file_batch_job_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobBeforeRunRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobBeforeRunRsp) ProtoMessage() {}

func (x *JobBeforeRunRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobBeforeRunRsp.ProtoReflect.Descriptor instead.
func (*JobBeforeRunRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{44}
}

// 任务处理回调参数
type JobProcessReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"`         // 创建的任务id. 必填
	DataIndex     int64                  `protobuf:"varint,2,opt,name=dataIndex,proto3" json:"dataIndex,omitempty"` // 要处理的数据索引, 从0开始
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobProcessReq) Reset() {
	*x = JobProcessReq{}
	mi := &file_batch_job_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobProcessReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProcessReq) ProtoMessage() {}

func (x *JobProcessReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobProcessReq.ProtoReflect.Descriptor instead.
func (*JobProcessReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{45}
}

func (x *JobProcessReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *JobProcessReq) GetDataIndex() int64 {
	if x != nil {
		return x.DataIndex
	}
	return 0
}

type JobProcessRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobProcessRsp) Reset() {
	*x = JobProcessRsp{}
	mi := &file_batch_job_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobProcessRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProcessRsp) ProtoMessage() {}

func (x *JobProcessRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobProcessRsp.ProtoReflect.Descriptor instead.
func (*JobProcessRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{46}
}

// 任务停止回调参数
type JobProcessStopReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	JobId            int64                  `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"`                       // 任务id
	JobName          string                 `protobuf:"bytes,2,opt,name=jobName,proto3" json:"jobName,omitempty"`                    // 任务名称
	BizId            int32                  `protobuf:"varint,3,opt,name=bizId,proto3" json:"bizId,omitempty"`                       // 业务id
	BizName          string                 `protobuf:"bytes,4,opt,name=bizName,proto3" json:"bizName,omitempty"`                    // 业务名
	JobData          string                 `protobuf:"bytes,5,opt,name=jobData,proto3" json:"jobData,omitempty"`                    // 任务数据, 让业务知道应该做什么
	ProcessDataTotal int64                  `protobuf:"varint,6,opt,name=processDataTotal,proto3" json:"processDataTotal,omitempty"` // 业务中需要处理数据总数
	ProcessedCount   int64                  `protobuf:"varint,7,opt,name=processedCount,proto3" json:"processedCount,omitempty"`     // 已处理过的数据量, 无论成功还是失败
	IsFinished       bool                   `protobuf:"varint,8,opt,name=isFinished,proto3" json:"isFinished,omitempty"`             // 任务是否已完成
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *JobProcessStopReq) Reset() {
	*x = JobProcessStopReq{}
	mi := &file_batch_job_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobProcessStopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProcessStopReq) ProtoMessage() {}

func (x *JobProcessStopReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobProcessStopReq.ProtoReflect.Descriptor instead.
func (*JobProcessStopReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{47}
}

func (x *JobProcessStopReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *JobProcessStopReq) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *JobProcessStopReq) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *JobProcessStopReq) GetBizName() string {
	if x != nil {
		return x.BizName
	}
	return ""
}

func (x *JobProcessStopReq) GetJobData() string {
	if x != nil {
		return x.JobData
	}
	return ""
}

func (x *JobProcessStopReq) GetProcessDataTotal() int64 {
	if x != nil {
		return x.ProcessDataTotal
	}
	return 0
}

func (x *JobProcessStopReq) GetProcessedCount() int64 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

func (x *JobProcessStopReq) GetIsFinished() bool {
	if x != nil {
		return x.IsFinished
	}
	return false
}

type JobProcessStopRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobProcessStopRsp) Reset() {
	*x = JobProcessStopRsp{}
	mi := &file_batch_job_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobProcessStopRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProcessStopRsp) ProtoMessage() {}

func (x *JobProcessStopRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobProcessStopRsp.ProtoReflect.Descriptor instead.
func (*JobProcessStopRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{48}
}

type QueryAllBizNameRsp_LineA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizId         int32                  `protobuf:"varint,1,opt,name=bizId,proto3" json:"bizId,omitempty"`                            // 业务id. 必填
	BizName       string                 `protobuf:"bytes,2,opt,name=bizName,proto3" json:"bizName,omitempty"`                         // 业务名
	Status        BizStatus              `protobuf:"varint,3,opt,name=status,proto3,enum=batch_job.BizStatus" json:"status,omitempty"` // 状态 0=正常 1=隐藏
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAllBizNameRsp_LineA) Reset() {
	*x = QueryAllBizNameRsp_LineA{}
	mi := &file_batch_job_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAllBizNameRsp_LineA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAllBizNameRsp_LineA) ProtoMessage() {}

func (x *QueryAllBizNameRsp_LineA) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAllBizNameRsp_LineA.ProtoReflect.Descriptor instead.
func (*QueryAllBizNameRsp_LineA) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{22, 0}
}

func (x *QueryAllBizNameRsp_LineA) GetBizId() int32 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *QueryAllBizNameRsp_LineA) GetBizName() string {
	if x != nil {
		return x.BizName
	}
	return ""
}

func (x *QueryAllBizNameRsp_LineA) GetStatus() BizStatus {
	if x != nil {
		return x.Status
	}
	return BizStatus_BizStatus_None
}

var File_batch_job_proto protoreflect.FileDescriptor

const file_batch_job_proto_rawDesc = "" +
	"\n" +
	"\x0fbatch_job.proto\x12\tbatch_job\x1a\x1cgoogle/api/annotations.proto\x1a\x17validate/validate.proto\"\xfc\x04\n" +
	"\x13AdminRegistryBizReq\x12!\n" +
	"\abizName\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\abizName\x12\x16\n" +
	"\x06remark\x18\x03 \x01(\tR\x06remark\x12/\n" +
	"\bexecType\x18\x04 \x01(\x0e2\x13.batch_job.ExecTypeR\bexecType\x123\n" +
	"\x0ecbBeforeCreate\x18\x05 \x01(\tB\v\xfaB\br\x06\xd0\x01\x01\x88\x01\x01R\x0ecbBeforeCreate\x12-\n" +
	"\vcbBeforeRun\x18\x06 \x01(\tB\v\xfaB\br\x06\xd0\x01\x01\x88\x01\x01R\vcbBeforeRun\x12&\n" +
	"\tcbProcess\x18\a \x01(\tB\b\xfaB\x05r\x03\x88\x01\x01R\tcbProcess\x121\n" +
	"\rcbProcessStop\x18\b \x01(\tB\v\xfaB\br\x06\xd0\x01\x01\x88\x01\x01R\rcbProcessStop\x12=\n" +
	"\x15cbBeforeCreateTimeout\x18\t \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x15cbBeforeCreateTimeout\x127\n" +
	"\x12cbBeforeRunTimeout\x18\n" +
	" \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x12cbBeforeRunTimeout\x123\n" +
	"\x10cbProcessTimeout\x18\v \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x10cbProcessTimeout\x12;\n" +
	"\x14cbProcessStopTimeout\x18\f \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x14cbProcessStopTimeout\x12\"\n" +
	"\x02op\x18\r \x01(\v2\x12.batch_job.OpInfoQR\x02op\x12,\n" +
	"\x06status\x18\x0e \x01(\x0e2\x14.batch_job.BizStatusR\x06status\"+\n" +
	"\x13AdminRegistryBizRsp\x12\x14\n" +
	"\x05bizId\x18\x01 \x01(\x05R\x05bizId\"\x99\x05\n" +
	"\x11AdminChangeBizReq\x12\x1d\n" +
	"\x05bizId\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x05bizId\x12!\n" +
	"\abizName\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\abizName\x12\x16\n" +
	"\x06remark\x18\x03 \x01(\tR\x06remark\x12/\n" +
	"\bexecType\x18\x04 \x01(\x0e2\x13.batch_job.ExecTypeR\bexecType\x123\n" +
	"\x0ecbBeforeCreate\x18\x05 \x01(\tB\v\xfaB\br\x06\xd0\x01\x01\x88\x01\x01R\x0ecbBeforeCreate\x12-\n" +
	"\vcbBeforeRun\x18\x06 \x01(\tB\v\xfaB\br\x06\xd0\x01\x01\x88\x01\x01R\vcbBeforeRun\x12&\n" +
	"\tcbProcess\x18\a \x01(\tB\b\xfaB\x05r\x03\x88\x01\x01R\tcbProcess\x121\n" +
	"\rcbProcessStop\x18\b \x01(\tB\v\xfaB\br\x06\xd0\x01\x01\x88\x01\x01R\rcbProcessStop\x12=\n" +
	"\x15cbBeforeCreateTimeout\x18\t \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x15cbBeforeCreateTimeout\x127\n" +
	"\x12cbBeforeRunTimeout\x18\n" +
	" \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x12cbBeforeRunTimeout\x123\n" +
	"\x10cbProcessTimeout\x18\v \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x10cbProcessTimeout\x12;\n" +
	"\x14cbProcessStopTimeout\x18\f \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x14cbProcessStopTimeout\x12\"\n" +
	"\x02op\x18\r \x01(\v2\x12.batch_job.OpInfoQR\x02op\x12,\n" +
	"\x06status\x18\x0e \x01(\x0e2\x14.batch_job.BizStatusR\x06status\"\x13\n" +
	"\x11AdminChangeBizRsp\"}\n" +
	"\aOpInfoQ\x12\x1a\n" +
	"\bopSource\x18\x01 \x01(\tR\bopSource\x12\x1a\n" +
	"\bopUserid\x18\x02 \x01(\tR\bopUserid\x12\x1e\n" +
	"\n" +
	"opUserName\x18\x03 \x01(\tR\n" +
	"opUserName\x12\x1a\n" +
	"\bopRemark\x18\x04 \x01(\tR\bopRemark\"\x95\x01\n" +
	"\aOpInfoA\x12\x1a\n" +
	"\bopSource\x18\x01 \x01(\tR\bopSource\x12\x1a\n" +
	"\bopUserid\x18\x02 \x01(\tR\bopUserid\x12\x1e\n" +
	"\n" +
	"opUserName\x18\x03 \x01(\tR\n" +
	"opUserName\x12\x1a\n" +
	"\bopRemark\x18\x04 \x01(\tR\bopRemark\x12\x16\n" +
	"\x06opTime\x18\x05 \x01(\x03R\x06opTime\"\\\n" +
	"\rBizOpHistoryA\x12\"\n" +
	"\x02op\x18\x01 \x01(\v2\x12.batch_job.OpInfoAR\x02op\x12'\n" +
	"\x04info\x18\x02 \x01(\v2\x13.batch_job.BizInfoAR\x04info\"\xc9\x04\n" +
	"\bBizInfoA\x12\x14\n" +
	"\x05bizId\x18\x01 \x01(\x05R\x05bizId\x12\x18\n" +
	"\abizName\x18\x02 \x01(\tR\abizName\x12\x16\n" +
	"\x06remark\x18\x03 \x01(\tR\x06remark\x12/\n" +
	"\bexecType\x18\x04 \x01(\x0e2\x13.batch_job.ExecTypeR\bexecType\x12&\n" +
	"\x0ecbBeforeCreate\x18\x05 \x01(\tR\x0ecbBeforeCreate\x12 \n" +
	"\vcbBeforeRun\x18\x06 \x01(\tR\vcbBeforeRun\x12\x1c\n" +
	"\tcbProcess\x18\a \x01(\tR\tcbProcess\x12$\n" +
	"\rcbProcessStop\x18\b \x01(\tR\rcbProcessStop\x124\n" +
	"\x15cbBeforeCreateTimeout\x18\t \x01(\x05R\x15cbBeforeCreateTimeout\x12.\n" +
	"\x12cbBeforeRunTimeout\x18\n" +
	" \x01(\x05R\x12cbBeforeRunTimeout\x12*\n" +
	"\x10cbProcessTimeout\x18\v \x01(\x05R\x10cbProcessTimeout\x122\n" +
	"\x14cbProcessStopTimeout\x18\f \x01(\x05R\x14cbProcessStopTimeout\x12\"\n" +
	"\x02op\x18\r \x01(\v2\x12.batch_job.OpInfoAR\x02op\x12,\n" +
	"\x06status\x18\x0e \x01(\x0e2\x14.batch_job.BizStatusR\x06status\x12\x1e\n" +
	"\n" +
	"createTime\x18\x0f \x01(\x03R\n" +
	"createTime\"\xdb\x01\n" +
	"\x0eBizInfoByListA\x12\x14\n" +
	"\x05bizId\x18\x01 \x01(\x05R\x05bizId\x12\x18\n" +
	"\abizName\x18\x02 \x01(\tR\abizName\x12\x16\n" +
	"\x06remark\x18\x03 \x01(\tR\x06remark\x12/\n" +
	"\bexecType\x18\x04 \x01(\x0e2\x13.batch_job.ExecTypeR\bexecType\x12\"\n" +
	"\x02op\x18\r \x01(\v2\x12.batch_job.OpInfoAR\x02op\x12,\n" +
	"\x06status\x18\x0e \x01(\x0e2\x14.batch_job.BizStatusR\x06status\"\xbd\x03\n" +
	"\bJobInfoA\x12\x14\n" +
	"\x05jobId\x18\x01 \x01(\x03R\x05jobId\x12\x18\n" +
	"\ajobName\x18\x02 \x01(\tR\ajobName\x12\x14\n" +
	"\x05bizId\x18\x03 \x01(\x05R\x05bizId\x12\x18\n" +
	"\ajobData\x18\x04 \x01(\tR\ajobData\x12*\n" +
	"\x10processDataTotal\x18\x05 \x01(\x03R\x10processDataTotal\x12&\n" +
	"\x0eprocessedCount\x18\x06 \x01(\x03R\x0eprocessedCount\x12 \n" +
	"\verrLogCount\x18\a \x01(\x03R\verrLogCount\x12,\n" +
	"\x06status\x18\b \x01(\x0e2\x14.batch_job.JobStatusR\x06status\x12\x1e\n" +
	"\n" +
	"createTime\x18\t \x01(\x03R\n" +
	"createTime\x12/\n" +
	"\brateType\x18\n" +
	" \x01(\x0e2\x13.batch_job.RateTypeR\brateType\x12\x18\n" +
	"\arateSec\x18\v \x01(\x05R\arateSec\x12\"\n" +
	"\x02op\x18\f \x01(\v2\x12.batch_job.OpInfoAR\x02op\x12\x1e\n" +
	"\n" +
	"statusInfo\x18\r \x01(\tR\n" +
	"statusInfo\"\xa9\x03\n" +
	"\x0eJobInfoByListA\x12\x14\n" +
	"\x05jobId\x18\x01 \x01(\x03R\x05jobId\x12\x18\n" +
	"\ajobName\x18\x02 \x01(\tR\ajobName\x12\x14\n" +
	"\x05bizId\x18\x03 \x01(\x05R\x05bizId\x12*\n" +
	"\x10processDataTotal\x18\x04 \x01(\x03R\x10processDataTotal\x12&\n" +
	"\x0eprocessedCount\x18\x05 \x01(\x03R\x0eprocessedCount\x12 \n" +
	"\verrLogCount\x18\x06 \x01(\x03R\verrLogCount\x12,\n" +
	"\x06status\x18\a \x01(\x0e2\x14.batch_job.JobStatusR\x06status\x12\x1e\n" +
	"\n" +
	"createTime\x18\b \x01(\x03R\n" +
	"createTime\x12/\n" +
	"\brateType\x18\t \x01(\x0e2\x13.batch_job.RateTypeR\brateType\x12\x18\n" +
	"\arateSec\x18\n" +
	" \x01(\x05R\arateSec\x12\"\n" +
	"\x02op\x18\v \x01(\v2\x12.batch_job.OpInfoAR\x02op\x12\x1e\n" +
	"\n" +
	"statusInfo\x18\f \x01(\tR\n" +
	"statusInfo\"\x84\x01\n" +
	"\bDataLogQ\x12\x16\n" +
	"\x06dataId\x18\x01 \x01(\tR\x06dataId\x12\x16\n" +
	"\x06remark\x18\x02 \x01(\tR\x06remark\x12\x16\n" +
	"\x06extend\x18\x03 \x01(\tR\x06extend\x120\n" +
	"\alogType\x18\x04 \x01(\x0e2\x16.batch_job.DataLogTypeR\alogType\"\xaa\x01\n" +
	"\x0eLogInfoByListA\x12\x16\n" +
	"\x06dataId\x18\x01 \x01(\tR\x06dataId\x12\x16\n" +
	"\x06remark\x18\x02 \x01(\tR\x06remark\x12\x16\n" +
	"\x06extend\x18\x03 \x01(\tR\x06extend\x120\n" +
	"\alogType\x18\x04 \x01(\x0e2\x16.batch_job.DataLogTypeR\alogType\x12\x1e\n" +
	"\n" +
	"createTime\x18\x05 \x01(\x03R\n" +
	"createTime\"\xc5\x02\n" +
	"\x11AdminCreateJobReq\x12\x1d\n" +
	"\x05bizId\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x05bizId\x12\x18\n" +
	"\ajobName\x18\x02 \x01(\tR\ajobName\x12\x18\n" +
	"\ajobData\x18\x03 \x01(\tR\ajobData\x12*\n" +
	"\x10processDataTotal\x18\x04 \x01(\x03R\x10processDataTotal\x12&\n" +
	"\x0eprocessedCount\x18\x05 \x01(\x03R\x0eprocessedCount\x12/\n" +
	"\brateType\x18\x06 \x01(\x0e2\x13.batch_job.RateTypeR\brateType\x12\x18\n" +
	"\arateSec\x18\a \x01(\x05R\arateSec\x12\"\n" +
	"\x02op\x18\b \x01(\v2\x12.batch_job.OpInfoQR\x02op\x12\x1a\n" +
	"\bstartNow\x18\t \x01(\bR\bstartNow\")\n" +
	"\x11AdminCreateJobRsp\x12\x14\n" +
	"\x05jobId\x18\x01 \x01(\x03R\x05jobId\"\xbf\x02\n" +
	"\x11AdminChangeJobReq\x12\x1d\n" +
	"\x05bizId\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x05bizId\x12\x18\n" +
	"\ajobName\x18\x02 \x01(\tR\ajobName\x12\x18\n" +
	"\ajobData\x18\x03 \x01(\tR\ajobData\x12*\n" +
	"\x10processDataTotal\x18\x04 \x01(\x03R\x10processDataTotal\x12&\n" +
	"\x0eprocessedCount\x18\x05 \x01(\x03R\x0eprocessedCount\x12/\n" +
	"\brateType\x18\x06 \x01(\x0e2\x13.batch_job.RateTypeR\brateType\x12\x18\n" +
	"\arateSec\x18\a \x01(\x05R\arateSec\x12\"\n" +
	"\x02op\x18\b \x01(\v2\x12.batch_job.OpInfoQR\x02op\x12\x14\n" +
	"\x05jobId\x18\t \x01(\x03R\x05jobId\"\x13\n" +
	"\x11AdminChangeJobRsp\"U\n" +
	"\x10AdminStartJobReq\x12\x1d\n" +
	"\x05jobId\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\x12\"\n" +
	"\x02op\x18\x02 \x01(\v2\x12.batch_job.OpInfoQR\x02op\"\x12\n" +
	"\x10AdminStartJobRsp\"T\n" +
	"\x0fAdminStopJobReq\x12\x1d\n" +
	"\x05jobId\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\x12\"\n" +
	"\x02op\x18\x02 \x01(\v2\x12.batch_job.OpInfoQR\x02op\"\x11\n" +
	"\x0fAdminStopJobRsp\"\x14\n" +
	"\x12QueryAllBizNameReq\"\xb4\x01\n" +
	"\x12QueryAllBizNameRsp\x127\n" +
	"\x04line\x18\x01 \x03(\v2#.batch_job.QueryAllBizNameRsp.LineAR\x04line\x1ae\n" +
	"\x05LineA\x12\x14\n" +
	"\x05bizId\x18\x01 \x01(\x05R\x05bizId\x12\x18\n" +
	"\abizName\x18\x02 \x01(\tR\abizName\x12,\n" +
	"\x06status\x18\x03 \x01(\x0e2\x14.batch_job.BizStatusR\x06status\"V\n" +
	"\x0fQueryBizInfoReq\x12\x1d\n" +
	"\x05bizId\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x05bizId\x12$\n" +
	"\rneedOpHistory\x18\x02 \x01(\bR\rneedOpHistory\":\n" +
	"\x0fQueryBizInfoRsp\x12'\n" +
	"\x04line\x18\x01 \x01(\v2\x13.batch_job.BizInfoAR\x04line\"\xb8\x01\n" +
	"\x0fQueryBizListReq\x12\x1b\n" +
	"\x04page\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x04page\x12#\n" +
	"\bpageSize\x18\x02 \x01(\x05B\a\xfaB\x04\x1a\x02(\x05R\bpageSize\x12\x1d\n" +
	"\x05bizId\x18\x03 \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x05bizId\x12\x16\n" +
	"\x06opUser\x18\x04 \x01(\tR\x06opUser\x12,\n" +
	"\x06status\x18\x05 \x01(\x0e2\x14.batch_job.BizStatusR\x06status\"r\n" +
	"\x0fQueryBizListRsp\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x1a\n" +
	"\bpageSize\x18\x02 \x01(\x05R\bpageSize\x12-\n" +
	"\x04line\x18\x03 \x03(\v2\x19.batch_job.BizInfoByListAR\x04line\"V\n" +
	"\x0fQueryJobInfoReq\x12\x1d\n" +
	"\x05jobId\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\x12$\n" +
	"\rneedOpHistory\x18\x02 \x01(\bR\rneedOpHistory\":\n" +
	"\x0fQueryJobInfoRsp\x12'\n" +
	"\x04line\x18\x01 \x01(\v2\x13.batch_job.JobInfoAR\x04line\"\xf1\x01\n" +
	"\x0fQueryJobListReq\x12\x1b\n" +
	"\x04page\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x04page\x12#\n" +
	"\bpageSize\x18\x02 \x01(\x05B\a\xfaB\x04\x1a\x02(\x05R\bpageSize\x12\x1d\n" +
	"\x05bizId\x18\x03 \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x05bizId\x12-\n" +
	"\x06status\x18\x04 \x01(\x0e2\x15.batch_job.JobStatusQR\x06status\x12\x1c\n" +
	"\tstartTime\x18\x05 \x01(\x03R\tstartTime\x12\x18\n" +
	"\aendTime\x18\x06 \x01(\x03R\aendTime\x12\x16\n" +
	"\x06opUser\x18\a \x01(\tR\x06opUser\"r\n" +
	"\x0fQueryJobListRsp\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x1a\n" +
	"\bpageSize\x18\x02 \x01(\x05R\bpageSize\x12-\n" +
	"\x04line\x18\x03 \x03(\v2\x19.batch_job.JobInfoByListAR\x04line\"\xe2\x01\n" +
	"\x12QueryJobDataLogReq\x12\x1d\n" +
	"\x05jobId\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\x12\x1e\n" +
	"\n" +
	"nextCursor\x18\x02 \x01(\x03R\n" +
	"nextCursor\x12#\n" +
	"\bpageSize\x18\x03 \x01(\x05B\a\xfaB\x04\x1a\x02(\x05R\bpageSize\x12\x1c\n" +
	"\tstartTime\x18\x04 \x01(\x03R\tstartTime\x12\x18\n" +
	"\aendTime\x18\x05 \x01(\x03R\aendTime\x120\n" +
	"\alogType\x18\x06 \x03(\x0e2\x16.batch_job.DataLogTypeR\alogType\"\x7f\n" +
	"\x12QueryJobDataLogRsp\x12\x1e\n" +
	"\n" +
	"nextCursor\x18\x01 \x01(\x03R\n" +
	"nextCursor\x12\x1a\n" +
	"\bpageSize\x18\x02 \x01(\x05R\bpageSize\x12-\n" +
	"\x04line\x18\x03 \x03(\v2\x19.batch_job.LogInfoByListAR\x04line\"/\n" +
	"\x0eBizStartJobReq\x12\x1d\n" +
	"\x05jobId\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\"\x10\n" +
	"\x0eBizStartJobRsp\".\n" +
	"\rBizStopJobReq\x12\x1d\n" +
	"\x05jobId\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\"\x0f\n" +
	"\rBizStopJobRsp\"\xc8\x01\n" +
	"\x13BizUpdateJobDataReq\x12\x1d\n" +
	"\x05jobId\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\x12\x18\n" +
	"\ajobData\x18\x02 \x01(\tR\ajobData\x12$\n" +
	"\rbizCustomData\x18\x03 \x01(\tR\rbizCustomData\x12*\n" +
	"\x10processDataTotal\x18\x04 \x01(\x03R\x10processDataTotal\x12&\n" +
	"\x0eprocessedCount\x18\x05 \x01(\x03R\x0eprocessedCount\"\x15\n" +
	"\x13BizUpdateJobDataRsp\"X\n" +
	"\x10BizAddDataLogReq\x12\x1d\n" +
	"\x05jobId\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\x12%\n" +
	"\x03log\x18\x02 \x03(\v2\x13.batch_job.DataLogQR\x03log\"\x12\n" +
	"\x10BizAddDataLogRsp\"\xb8\x02\n" +
	"\x1bJobBeforeCreateAndChangeReq\x12\x18\n" +
	"\ajobName\x18\x01 \x01(\tR\ajobName\x12\x14\n" +
	"\x05bizId\x18\x02 \x01(\x05R\x05bizId\x12\x18\n" +
	"\ajobData\x18\x03 \x01(\tR\ajobData\x12*\n" +
	"\x10processDataTotal\x18\x04 \x01(\x03R\x10processDataTotal\x12&\n" +
	"\x0eprocessedCount\x18\x05 \x01(\x03R\x0eprocessedCount\x12/\n" +
	"\brateType\x18\x06 \x01(\x0e2\x13.batch_job.RateTypeR\brateType\x12\x18\n" +
	"\arateSec\x18\a \x01(\x05R\arateSec\x12\x14\n" +
	"\x05jobId\x18\b \x01(\x03R\x05jobId\x12\x1a\n" +
	"\bisCreate\x18\t \x01(\bR\bisCreate\"\x1d\n" +
	"\x1bJobBeforeCreateAndChangeRsp\"\xdf\x01\n" +
	"\x0fJobBeforeRunReq\x12\x14\n" +
	"\x05jobId\x18\x01 \x01(\x03R\x05jobId\x12\x18\n" +
	"\ajobName\x18\x02 \x01(\tR\ajobName\x12\x14\n" +
	"\x05bizId\x18\x03 \x01(\x05R\x05bizId\x12\x18\n" +
	"\abizName\x18\x04 \x01(\tR\abizName\x12\x18\n" +
	"\ajobData\x18\x05 \x01(\tR\ajobData\x12*\n" +
	"\x10processDataTotal\x18\x06 \x01(\x03R\x10processDataTotal\x12&\n" +
	"\x0eprocessedCount\x18\a \x01(\x03R\x0eprocessedCount\"\x11\n" +
	"\x0fJobBeforeRunRsp\"C\n" +
	"\rJobProcessReq\x12\x14\n" +
	"\x05jobId\x18\x01 \x01(\x03R\x05jobId\x12\x1c\n" +
	"\tdataIndex\x18\x02 \x01(\x03R\tdataIndex\"\x0f\n" +
	"\rJobProcessRsp\"\x81\x02\n" +
	"\x11JobProcessStopReq\x12\x14\n" +
	"\x05jobId\x18\x01 \x01(\x03R\x05jobId\x12\x18\n" +
	"\ajobName\x18\x02 \x01(\tR\ajobName\x12\x14\n" +
	"\x05bizId\x18\x03 \x01(\x05R\x05bizId\x12\x18\n" +
	"\abizName\x18\x04 \x01(\tR\abizName\x12\x18\n" +
	"\ajobData\x18\x05 \x01(\tR\ajobData\x12*\n" +
	"\x10processDataTotal\x18\x06 \x01(\x03R\x10processDataTotal\x12&\n" +
	"\x0eprocessedCount\x18\a \x01(\x03R\x0eprocessedCount\x12\x1e\n" +
	"\n" +
	"isFinished\x18\b \x01(\bR\n" +
	"isFinished\"\x13\n" +
	"\x11JobProcessStopRsp*<\n" +
	"\bRateType\x12\x14\n" +
	"\x10RateType_RateSec\x10\x00\x12\x1a\n" +
	"\x16RateType_Serialization\x10\x01*8\n" +
	"\bExecType\x12\x11\n" +
	"\rExecType_None\x10\x00\x12\x19\n" +
	"\x15ExecType_HttpCallback\x10\x01*5\n" +
	"\tBizStatus\x12\x12\n" +
	"\x0eBizStatus_None\x10\x00\x12\x14\n" +
	"\x10BizStatus_Hidden\x10\x01*\x9a\x01\n" +
	"\tJobStatus\x12\x15\n" +
	"\x11JobStatus_Created\x10\x00\x12\x18\n" +
	"\x14JobStatus_WaitBizRun\x10\x01\x12\x15\n" +
	"\x11JobStatus_Running\x10\x02\x12\x16\n" +
	"\x12JobStatus_Finished\x10\x03\x12\x16\n" +
	"\x12JobStatus_Stopping\x10\x04\x12\x15\n" +
	"\x11JobStatus_Stopped\x10\x05*U\n" +
	"\n" +
	"JobStatusQ\x12\x16\n" +
	"\x12JobStatusQ_Created\x10\x00\x12\x16\n" +
	"\x12JobStatusQ_Running\x10\x02\x12\x17\n" +
	"\x13JobStatusQ_Finished\x10\x03*~\n" +
	"\vDataLogType\x12\x15\n" +
	"\x11DataLogType_Debug\x10\x00\x12\x14\n" +
	"\x10DataLogType_Info\x10\x01\x12\x14\n" +
	"\x10DataLogType_Warn\x10\x02\x12\x13\n" +
	"\x0fDataLogType_Err\x10\x03\x12\x17\n" +
	"\x13DataLogType_ErrData\x10\x042\x91\x0e\n" +
	"\x0fBatchJobService\x12y\n" +
	"\x10AdminRegistryBiz\x12\x1e.batch_job.AdminRegistryBizReq\x1a\x1e.batch_job.AdminRegistryBizRsp\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/BatchJob/AdminRegistryBiz\x12q\n" +
	"\x0eAdminChangeBiz\x12\x1c.batch_job.AdminChangeBizReq\x1a\x1c.batch_job.AdminChangeBizRsp\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/BatchJob/AdminChangeBiz\x12q\n" +
	"\x0eAdminCreateJob\x12\x1c.batch_job.AdminCreateJobReq\x1a\x1c.batch_job.AdminCreateJobRsp\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/BatchJob/AdminCreateJob\x12q\n" +
	"\x0eAdminChangeJob\x12\x1c.batch_job.AdminChangeJobReq\x1a\x1c.batch_job.AdminChangeJobRsp\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/BatchJob/AdminChangeJob\x12m\n" +
	"\rAdminStartJob\x12\x1b.batch_job.AdminStartJobReq\x1a\x1b.batch_job.AdminStartJobRsp\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/BatchJob/AdminStartJob\x12i\n" +
	"\fAdminStopJob\x12\x1a.batch_job.AdminStopJobReq\x1a\x1a.batch_job.AdminStopJobRsp\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/BatchJob/AdminStopJob\x12u\n" +
	"\x0fQueryAllBizName\x12\x1d.batch_job.QueryAllBizNameReq\x1a\x1d.batch_job.QueryAllBizNameRsp\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/BatchJob/QueryAllBizName\x12i\n" +
	"\fQueryBizInfo\x12\x1a.batch_job.QueryBizInfoReq\x1a\x1a.batch_job.QueryBizInfoRsp\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/BatchJob/QueryBizInfo\x12i\n" +
	"\fQueryBizList\x12\x1a.batch_job.QueryBizListReq\x1a\x1a.batch_job.QueryBizListRsp\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/BatchJob/QueryBizList\x12m\n" +
	"\fQueryJobInfo\x12\x1a.batch_job.QueryJobInfoReq\x1a\x1a.batch_job.QueryJobInfoRsp\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/BatchJob/QueryJobBaseInfo\x12i\n" +
	"\fQueryJobList\x12\x1a.batch_job.QueryJobListReq\x1a\x1a.batch_job.QueryJobListRsp\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/BatchJob/QueryJobList\x12u\n" +
	"\x0fQueryJobDataLog\x12\x1d.batch_job.QueryJobDataLogReq\x1a\x1d.batch_job.QueryJobDataLogRsp\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/BatchJob/QueryJobDataLog\x12e\n" +
	"\vBizStartJob\x12\x19.batch_job.BizStartJobReq\x1a\x19.batch_job.BizStartJobRsp\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/BatchJob/BizStartJob\x12a\n" +
	"\n" +
	"BizStopJob\x12\x18.batch_job.BizStopJobReq\x1a\x18.batch_job.BizStopJobRsp\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/BatchJob/BizStopJob\x12y\n" +
	"\x10BizUpdateJobData\x12\x1e.batch_job.BizUpdateJobDataReq\x1a\x1e.batch_job.BizUpdateJobDataRsp\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/BatchJob/BizUpdateJobData\x12m\n" +
	"\rBizAddDataLog\x12\x1b.batch_job.BizAddDataLogReq\x1a\x1b.batch_job.BizAddDataLogRsp\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/BatchJob/BizAddDataLogB\"Z github.com/zlyuancn/batch_job/pbb\x06proto3"

var (
	file_batch_job_proto_rawDescOnce sync.Once
	file_batch_job_proto_rawDescData []byte
)

func file_batch_job_proto_rawDescGZIP() []byte {
	file_batch_job_proto_rawDescOnce.Do(func() {
		file_batch_job_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_batch_job_proto_rawDesc), len(file_batch_job_proto_rawDesc)))
	})
	return file_batch_job_proto_rawDescData
}

var file_batch_job_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_batch_job_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_batch_job_proto_goTypes = []any{
	(RateType)(0),                       // 0: batch_job.RateType
	(ExecType)(0),                       // 1: batch_job.ExecType
	(BizStatus)(0),                      // 2: batch_job.BizStatus
	(JobStatus)(0),                      // 3: batch_job.JobStatus
	(JobStatusQ)(0),                     // 4: batch_job.JobStatusQ
	(DataLogType)(0),                    // 5: batch_job.DataLogType
	(*AdminRegistryBizReq)(nil),         // 6: batch_job.AdminRegistryBizReq
	(*AdminRegistryBizRsp)(nil),         // 7: batch_job.AdminRegistryBizRsp
	(*AdminChangeBizReq)(nil),           // 8: batch_job.AdminChangeBizReq
	(*AdminChangeBizRsp)(nil),           // 9: batch_job.AdminChangeBizRsp
	(*OpInfoQ)(nil),                     // 10: batch_job.OpInfoQ
	(*OpInfoA)(nil),                     // 11: batch_job.OpInfoA
	(*BizOpHistoryA)(nil),               // 12: batch_job.BizOpHistoryA
	(*BizInfoA)(nil),                    // 13: batch_job.BizInfoA
	(*BizInfoByListA)(nil),              // 14: batch_job.BizInfoByListA
	(*JobInfoA)(nil),                    // 15: batch_job.JobInfoA
	(*JobInfoByListA)(nil),              // 16: batch_job.JobInfoByListA
	(*DataLogQ)(nil),                    // 17: batch_job.DataLogQ
	(*LogInfoByListA)(nil),              // 18: batch_job.LogInfoByListA
	(*AdminCreateJobReq)(nil),           // 19: batch_job.AdminCreateJobReq
	(*AdminCreateJobRsp)(nil),           // 20: batch_job.AdminCreateJobRsp
	(*AdminChangeJobReq)(nil),           // 21: batch_job.AdminChangeJobReq
	(*AdminChangeJobRsp)(nil),           // 22: batch_job.AdminChangeJobRsp
	(*AdminStartJobReq)(nil),            // 23: batch_job.AdminStartJobReq
	(*AdminStartJobRsp)(nil),            // 24: batch_job.AdminStartJobRsp
	(*AdminStopJobReq)(nil),             // 25: batch_job.AdminStopJobReq
	(*AdminStopJobRsp)(nil),             // 26: batch_job.AdminStopJobRsp
	(*QueryAllBizNameReq)(nil),          // 27: batch_job.QueryAllBizNameReq
	(*QueryAllBizNameRsp)(nil),          // 28: batch_job.QueryAllBizNameRsp
	(*QueryBizInfoReq)(nil),             // 29: batch_job.QueryBizInfoReq
	(*QueryBizInfoRsp)(nil),             // 30: batch_job.QueryBizInfoRsp
	(*QueryBizListReq)(nil),             // 31: batch_job.QueryBizListReq
	(*QueryBizListRsp)(nil),             // 32: batch_job.QueryBizListRsp
	(*QueryJobInfoReq)(nil),             // 33: batch_job.QueryJobInfoReq
	(*QueryJobInfoRsp)(nil),             // 34: batch_job.QueryJobInfoRsp
	(*QueryJobListReq)(nil),             // 35: batch_job.QueryJobListReq
	(*QueryJobListRsp)(nil),             // 36: batch_job.QueryJobListRsp
	(*QueryJobDataLogReq)(nil),          // 37: batch_job.QueryJobDataLogReq
	(*QueryJobDataLogRsp)(nil),          // 38: batch_job.QueryJobDataLogRsp
	(*BizStartJobReq)(nil),              // 39: batch_job.BizStartJobReq
	(*BizStartJobRsp)(nil),              // 40: batch_job.BizStartJobRsp
	(*BizStopJobReq)(nil),               // 41: batch_job.BizStopJobReq
	(*BizStopJobRsp)(nil),               // 42: batch_job.BizStopJobRsp
	(*BizUpdateJobDataReq)(nil),         // 43: batch_job.BizUpdateJobDataReq
	(*BizUpdateJobDataRsp)(nil),         // 44: batch_job.BizUpdateJobDataRsp
	(*BizAddDataLogReq)(nil),            // 45: batch_job.BizAddDataLogReq
	(*BizAddDataLogRsp)(nil),            // 46: batch_job.BizAddDataLogRsp
	(*JobBeforeCreateAndChangeReq)(nil), // 47: batch_job.JobBeforeCreateAndChangeReq
	(*JobBeforeCreateAndChangeRsp)(nil), // 48: batch_job.JobBeforeCreateAndChangeRsp
	(*JobBeforeRunReq)(nil),             // 49: batch_job.JobBeforeRunReq
	(*JobBeforeRunRsp)(nil),             // 50: batch_job.JobBeforeRunRsp
	(*JobProcessReq)(nil),               // 51: batch_job.JobProcessReq
	(*JobProcessRsp)(nil),               // 52: batch_job.JobProcessRsp
	(*JobProcessStopReq)(nil),           // 53: batch_job.JobProcessStopReq
	(*JobProcessStopRsp)(nil),           // 54: batch_job.JobProcessStopRsp
	(*QueryAllBizNameRsp_LineA)(nil),    // 55: batch_job.QueryAllBizNameRsp.LineA
}
var file_batch_job_proto_depIdxs = []int32{
	1,  // 0: batch_job.AdminRegistryBizReq.execType:type_name -> batch_job.ExecType
	10, // 1: batch_job.AdminRegistryBizReq.op:type_name -> batch_job.OpInfoQ
	2,  // 2: batch_job.AdminRegistryBizReq.status:type_name -> batch_job.BizStatus
	1,  // 3: batch_job.AdminChangeBizReq.execType:type_name -> batch_job.ExecType
	10, // 4: batch_job.AdminChangeBizReq.op:type_name -> batch_job.OpInfoQ
	2,  // 5: batch_job.AdminChangeBizReq.status:type_name -> batch_job.BizStatus
	11, // 6: batch_job.BizOpHistoryA.op:type_name -> batch_job.OpInfoA
	13, // 7: batch_job.BizOpHistoryA.info:type_name -> batch_job.BizInfoA
	1,  // 8: batch_job.BizInfoA.execType:type_name -> batch_job.ExecType
	11, // 9: batch_job.BizInfoA.op:type_name -> batch_job.OpInfoA
	2,  // 10: batch_job.BizInfoA.status:type_name -> batch_job.BizStatus
	1,  // 11: batch_job.BizInfoByListA.execType:type_name -> batch_job.ExecType
	11, // 12: batch_job.BizInfoByListA.op:type_name -> batch_job.OpInfoA
	2,  // 13: batch_job.BizInfoByListA.status:type_name -> batch_job.BizStatus
	3,  // 14: batch_job.JobInfoA.status:type_name -> batch_job.JobStatus
	0,  // 15: batch_job.JobInfoA.rateType:type_name -> batch_job.RateType
	11, // 16: batch_job.JobInfoA.op:type_name -> batch_job.OpInfoA
	3,  // 17: batch_job.JobInfoByListA.status:type_name -> batch_job.JobStatus
	0,  // 18: batch_job.JobInfoByListA.rateType:type_name -> batch_job.RateType
	11, // 19: batch_job.JobInfoByListA.op:type_name -> batch_job.OpInfoA
	5,  // 20: batch_job.DataLogQ.logType:type_name -> batch_job.DataLogType
	5,  // 21: batch_job.LogInfoByListA.logType:type_name -> batch_job.DataLogType
	0,  // 22: batch_job.AdminCreateJobReq.rateType:type_name -> batch_job.RateType
	10, // 23: batch_job.AdminCreateJobReq.op:type_name -> batch_job.OpInfoQ
	0,  // 24: batch_job.AdminChangeJobReq.rateType:type_name -> batch_job.RateType
	10, // 25: batch_job.AdminChangeJobReq.op:type_name -> batch_job.OpInfoQ
	10, // 26: batch_job.AdminStartJobReq.op:type_name -> batch_job.OpInfoQ
	10, // 27: batch_job.AdminStopJobReq.op:type_name -> batch_job.OpInfoQ
	55, // 28: batch_job.QueryAllBizNameRsp.line:type_name -> batch_job.QueryAllBizNameRsp.LineA
	13, // 29: batch_job.QueryBizInfoRsp.line:type_name -> batch_job.BizInfoA
	2,  // 30: batch_job.QueryBizListReq.status:type_name -> batch_job.BizStatus
	14, // 31: batch_job.QueryBizListRsp.line:type_name -> batch_job.BizInfoByListA
	15, // 32: batch_job.QueryJobInfoRsp.line:type_name -> batch_job.JobInfoA
	4,  // 33: batch_job.QueryJobListReq.status:type_name -> batch_job.JobStatusQ
	16, // 34: batch_job.QueryJobListRsp.line:type_name -> batch_job.JobInfoByListA
	5,  // 35: batch_job.QueryJobDataLogReq.logType:type_name -> batch_job.DataLogType
	18, // 36: batch_job.QueryJobDataLogRsp.line:type_name -> batch_job.LogInfoByListA
	17, // 37: batch_job.BizAddDataLogReq.log:type_name -> batch_job.DataLogQ
	0,  // 38: batch_job.JobBeforeCreateAndChangeReq.rateType:type_name -> batch_job.RateType
	2,  // 39: batch_job.QueryAllBizNameRsp.LineA.status:type_name -> batch_job.BizStatus
	6,  // 40: batch_job.BatchJobService.AdminRegistryBiz:input_type -> batch_job.AdminRegistryBizReq
	8,  // 41: batch_job.BatchJobService.AdminChangeBiz:input_type -> batch_job.AdminChangeBizReq
	19, // 42: batch_job.BatchJobService.AdminCreateJob:input_type -> batch_job.AdminCreateJobReq
	21, // 43: batch_job.BatchJobService.AdminChangeJob:input_type -> batch_job.AdminChangeJobReq
	23, // 44: batch_job.BatchJobService.AdminStartJob:input_type -> batch_job.AdminStartJobReq
	25, // 45: batch_job.BatchJobService.AdminStopJob:input_type -> batch_job.AdminStopJobReq
	27, // 46: batch_job.BatchJobService.QueryAllBizName:input_type -> batch_job.QueryAllBizNameReq
	29, // 47: batch_job.BatchJobService.QueryBizInfo:input_type -> batch_job.QueryBizInfoReq
	31, // 48: batch_job.BatchJobService.QueryBizList:input_type -> batch_job.QueryBizListReq
	33, // 49: batch_job.BatchJobService.QueryJobInfo:input_type -> batch_job.QueryJobInfoReq
	35, // 50: batch_job.BatchJobService.QueryJobList:input_type -> batch_job.QueryJobListReq
	37, // 51: batch_job.BatchJobService.QueryJobDataLog:input_type -> batch_job.QueryJobDataLogReq
	39, // 52: batch_job.BatchJobService.BizStartJob:input_type -> batch_job.BizStartJobReq
	41, // 53: batch_job.BatchJobService.BizStopJob:input_type -> batch_job.BizStopJobReq
	43, // 54: batch_job.BatchJobService.BizUpdateJobData:input_type -> batch_job.BizUpdateJobDataReq
	45, // 55: batch_job.BatchJobService.BizAddDataLog:input_type -> batch_job.BizAddDataLogReq
	7,  // 56: batch_job.BatchJobService.AdminRegistryBiz:output_type -> batch_job.AdminRegistryBizRsp
	9,  // 57: batch_job.BatchJobService.AdminChangeBiz:output_type -> batch_job.AdminChangeBizRsp
	20, // 58: batch_job.BatchJobService.AdminCreateJob:output_type -> batch_job.AdminCreateJobRsp
	22, // 59: batch_job.BatchJobService.AdminChangeJob:output_type -> batch_job.AdminChangeJobRsp
	24, // 60: batch_job.BatchJobService.AdminStartJob:output_type -> batch_job.AdminStartJobRsp
	26, // 61: batch_job.BatchJobService.AdminStopJob:output_type -> batch_job.AdminStopJobRsp
	28, // 62: batch_job.BatchJobService.QueryAllBizName:output_type -> batch_job.QueryAllBizNameRsp
	30, // 63: batch_job.BatchJobService.QueryBizInfo:output_type -> batch_job.QueryBizInfoRsp
	32, // 64: batch_job.BatchJobService.QueryBizList:output_type -> batch_job.QueryBizListRsp
	34, // 65: batch_job.BatchJobService.QueryJobInfo:output_type -> batch_job.QueryJobInfoRsp
	36, // 66: batch_job.BatchJobService.QueryJobList:output_type -> batch_job.QueryJobListRsp
	38, // 67: batch_job.BatchJobService.QueryJobDataLog:output_type -> batch_job.QueryJobDataLogRsp
	40, // 68: batch_job.BatchJobService.BizStartJob:output_type -> batch_job.BizStartJobRsp
	42, // 69: batch_job.BatchJobService.BizStopJob:output_type -> batch_job.BizStopJobRsp
	44, // 70: batch_job.BatchJobService.BizUpdateJobData:output_type -> batch_job.BizUpdateJobDataRsp
	46, // 71: batch_job.BatchJobService.BizAddDataLog:output_type -> batch_job.BizAddDataLogRsp
	56, // [56:72] is the sub-list for method output_type
	40, // [40:56] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_batch_job_proto_init() }
func file_batch_job_proto_init() {
	if File_batch_job_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_batch_job_proto_rawDesc), len(file_batch_job_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_batch_job_proto_goTypes,
		DependencyIndexes: file_batch_job_proto_depIdxs,
		EnumInfos:         file_batch_job_proto_enumTypes,
		MessageInfos:      file_batch_job_proto_msgTypes,
	}.Build()
	File_batch_job_proto = out.File
	file_batch_job_proto_goTypes = nil
	file_batch_job_proto_depIdxs = nil
}
