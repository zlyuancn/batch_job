// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.1
// source: batch_job.proto

package pb

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 速率类型
type RateType int32

const (
	RateType_RateSec       RateType = 0 // 每秒限速
	RateType_Serialization RateType = 1 // 串行化
)

// Enum value maps for RateType.
var (
	RateType_name = map[int32]string{
		0: "RateSec",
		1: "Serialization",
	}
	RateType_value = map[string]int32{
		"RateSec":       0,
		"Serialization": 1,
	}
)

func (x RateType) Enum() *RateType {
	p := new(RateType)
	*p = x
	return p
}

func (x RateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RateType) Descriptor() protoreflect.EnumDescriptor {
	return file_batch_job_proto_enumTypes[0].Descriptor()
}

func (RateType) Type() protoreflect.EnumType {
	return &file_batch_job_proto_enumTypes[0]
}

func (x RateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RateType.Descriptor instead.
func (RateType) EnumDescriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{0}
}

// 执行类型
type ExecType int32

const (
	ExecType_Callback ExecType = 0 // 回调
	ExecType_BizLocal ExecType = 1 // 业务本地
)

// Enum value maps for ExecType.
var (
	ExecType_name = map[int32]string{
		0: "Callback",
		1: "BizLocal",
	}
	ExecType_value = map[string]int32{
		"Callback": 0,
		"BizLocal": 1,
	}
)

func (x ExecType) Enum() *ExecType {
	p := new(ExecType)
	*p = x
	return p
}

func (x ExecType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecType) Descriptor() protoreflect.EnumDescriptor {
	return file_batch_job_proto_enumTypes[1].Descriptor()
}

func (ExecType) Type() protoreflect.EnumType {
	return &file_batch_job_proto_enumTypes[1]
}

func (x ExecType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecType.Descriptor instead.
func (ExecType) EnumDescriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{1}
}

// 任务状态
type JobStatus int32

const (
	JobStatus_Created    JobStatus = 0 // 已创建
	JobStatus_WaitBizRun JobStatus = 1 // 等待业务主动启动
	JobStatus_Running    JobStatus = 2 // 运行中
	JobStatus_Finished   JobStatus = 3 // 已完成
	JobStatus_Stopping   JobStatus = 4 // 正在停止
	JobStatus_Stopped    JobStatus = 5 // 已停止
)

// Enum value maps for JobStatus.
var (
	JobStatus_name = map[int32]string{
		0: "Created",
		1: "WaitBizRun",
		2: "Running",
		3: "Finished",
		4: "Stopping",
		5: "Stopped",
	}
	JobStatus_value = map[string]int32{
		"Created":    0,
		"WaitBizRun": 1,
		"Running":    2,
		"Finished":   3,
		"Stopping":   4,
		"Stopped":    5,
	}
)

func (x JobStatus) Enum() *JobStatus {
	p := new(JobStatus)
	*p = x
	return p
}

func (x JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_batch_job_proto_enumTypes[2].Descriptor()
}

func (JobStatus) Type() protoreflect.EnumType {
	return &file_batch_job_proto_enumTypes[2]
}

func (x JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobStatus.Descriptor instead.
func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{2}
}

// 数据的日志类型
type DataLogType int32

const (
	DataLogType_Debug DataLogType = 0 // 调试
	DataLogType_Info  DataLogType = 1 // 信息
	DataLogType_Warn  DataLogType = 2 // 警告
	DataLogType_Err   DataLogType = 3 // 错误
)

// Enum value maps for DataLogType.
var (
	DataLogType_name = map[int32]string{
		0: "Debug",
		1: "Info",
		2: "Warn",
		3: "Err",
	}
	DataLogType_value = map[string]int32{
		"Debug": 0,
		"Info":  1,
		"Warn":  2,
		"Err":   3,
	}
)

func (x DataLogType) Enum() *DataLogType {
	p := new(DataLogType)
	*p = x
	return p
}

func (x DataLogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataLogType) Descriptor() protoreflect.EnumDescriptor {
	return file_batch_job_proto_enumTypes[3].Descriptor()
}

func (DataLogType) Type() protoreflect.EnumType {
	return &file_batch_job_proto_enumTypes[3]
}

func (x DataLogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataLogType.Descriptor instead.
func (DataLogType) EnumDescriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{3}
}

type AdminRegistryBizReq struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BizType               int32                  `protobuf:"varint,1,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`                                               // 业务类型. 必填
	BizName               string                 `protobuf:"bytes,2,opt,name=biz_name,json=bizName,proto3" json:"biz_name,omitempty"`                                                // 业务名
	Remark                string                 `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`                                                                 // 备注
	CbBeforeCreate        string                 `protobuf:"bytes,4,opt,name=cb_before_create,json=cbBeforeCreate,proto3" json:"cb_before_create,omitempty"`                         // 创建任务回调url
	CbBeforeRun           string                 `protobuf:"bytes,5,opt,name=cb_before_run,json=cbBeforeRun,proto3" json:"cb_before_run,omitempty"`                                  // 启动前回调. 一旦配置, 则任务必须由业务主动调用 BizStartJob 执行任务. 否则任务将一直处于 JobStatus.WaitBizRun 状态
	CbProcess             string                 `protobuf:"bytes,6,opt,name=cb_process,json=cbProcess,proto3" json:"cb_process,omitempty"`                                          // 处理任务回调. 必填
	CbProcessStop         string                 `protobuf:"bytes,7,opt,name=cb_process_stop,json=cbProcessStop,proto3" json:"cb_process_stop,omitempty"`                            // 处理任务停止回调. 用于业务方做一些清理. 选填
	CbBeforeCreateTimeout int32                  `protobuf:"varint,8,opt,name=cb_before_create_timeout,json=cbBeforeCreateTimeout,proto3" json:"cb_before_create_timeout,omitempty"` // 启动前回调超时秒数
	CbBeforeRunTimeout    int32                  `protobuf:"varint,9,opt,name=cb_before_run_timeout,json=cbBeforeRunTimeout,proto3" json:"cb_before_run_timeout,omitempty"`          // 启动前回调超时秒数
	CbProcessTimeout      int32                  `protobuf:"varint,10,opt,name=cb_process_timeout,json=cbProcessTimeout,proto3" json:"cb_process_timeout,omitempty"`                 // 处理任务回调超时秒数
	CbProcessStopTimeout  int32                  `protobuf:"varint,11,opt,name=cb_process_stop_timeout,json=cbProcessStopTimeout,proto3" json:"cb_process_stop_timeout,omitempty"`   // 处理任务停止回调超时秒数
	RateSec               int32                  `protobuf:"varint,12,opt,name=rate_sec,json=rateSec,proto3" json:"rate_sec,omitempty"`                                              // 每秒处理速率. 0表示不限制
	RateType              RateType               `protobuf:"varint,13,opt,name=rate_type,json=rateType,proto3,enum=batch_job.RateType" json:"rate_type,omitempty"`                   // 速率类型
	ExecType              ExecType               `protobuf:"varint,14,opt,name=exec_type,json=execType,proto3,enum=batch_job.ExecType" json:"exec_type,omitempty"`                   // 执行类型
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *AdminRegistryBizReq) Reset() {
	*x = AdminRegistryBizReq{}
	mi := &file_batch_job_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminRegistryBizReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRegistryBizReq) ProtoMessage() {}

func (x *AdminRegistryBizReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRegistryBizReq.ProtoReflect.Descriptor instead.
func (*AdminRegistryBizReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{0}
}

func (x *AdminRegistryBizReq) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *AdminRegistryBizReq) GetBizName() string {
	if x != nil {
		return x.BizName
	}
	return ""
}

func (x *AdminRegistryBizReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AdminRegistryBizReq) GetCbBeforeCreate() string {
	if x != nil {
		return x.CbBeforeCreate
	}
	return ""
}

func (x *AdminRegistryBizReq) GetCbBeforeRun() string {
	if x != nil {
		return x.CbBeforeRun
	}
	return ""
}

func (x *AdminRegistryBizReq) GetCbProcess() string {
	if x != nil {
		return x.CbProcess
	}
	return ""
}

func (x *AdminRegistryBizReq) GetCbProcessStop() string {
	if x != nil {
		return x.CbProcessStop
	}
	return ""
}

func (x *AdminRegistryBizReq) GetCbBeforeCreateTimeout() int32 {
	if x != nil {
		return x.CbBeforeCreateTimeout
	}
	return 0
}

func (x *AdminRegistryBizReq) GetCbBeforeRunTimeout() int32 {
	if x != nil {
		return x.CbBeforeRunTimeout
	}
	return 0
}

func (x *AdminRegistryBizReq) GetCbProcessTimeout() int32 {
	if x != nil {
		return x.CbProcessTimeout
	}
	return 0
}

func (x *AdminRegistryBizReq) GetCbProcessStopTimeout() int32 {
	if x != nil {
		return x.CbProcessStopTimeout
	}
	return 0
}

func (x *AdminRegistryBizReq) GetRateSec() int32 {
	if x != nil {
		return x.RateSec
	}
	return 0
}

func (x *AdminRegistryBizReq) GetRateType() RateType {
	if x != nil {
		return x.RateType
	}
	return RateType_RateSec
}

func (x *AdminRegistryBizReq) GetExecType() ExecType {
	if x != nil {
		return x.ExecType
	}
	return ExecType_Callback
}

type AdminRegistryBizRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminRegistryBizRsp) Reset() {
	*x = AdminRegistryBizRsp{}
	mi := &file_batch_job_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminRegistryBizRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminRegistryBizRsp) ProtoMessage() {}

func (x *AdminRegistryBizRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminRegistryBizRsp.ProtoReflect.Descriptor instead.
func (*AdminRegistryBizRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{1}
}

// 操作信息-请求
type OpInfoQ struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OpSource      string                 `protobuf:"bytes,1,opt,name=op_source,json=opSource,proto3" json:"op_source,omitempty"`         // 操作来源
	OpUserid      string                 `protobuf:"bytes,2,opt,name=op_userid,json=opUserid,proto3" json:"op_userid,omitempty"`         // 操作用户id
	OpUserName    string                 `protobuf:"bytes,3,opt,name=op_user_name,json=opUserName,proto3" json:"op_user_name,omitempty"` // 操作用户名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpInfoQ) Reset() {
	*x = OpInfoQ{}
	mi := &file_batch_job_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpInfoQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpInfoQ) ProtoMessage() {}

func (x *OpInfoQ) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpInfoQ.ProtoReflect.Descriptor instead.
func (*OpInfoQ) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{2}
}

func (x *OpInfoQ) GetOpSource() string {
	if x != nil {
		return x.OpSource
	}
	return ""
}

func (x *OpInfoQ) GetOpUserid() string {
	if x != nil {
		return x.OpUserid
	}
	return ""
}

func (x *OpInfoQ) GetOpUserName() string {
	if x != nil {
		return x.OpUserName
	}
	return ""
}

// 操作信息-响应
type OpInfoA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OpSource      string                 `protobuf:"bytes,1,opt,name=op_source,json=opSource,proto3" json:"op_source,omitempty"`         // 操作来源
	OpUserid      string                 `protobuf:"bytes,2,opt,name=op_userid,json=opUserid,proto3" json:"op_userid,omitempty"`         // 操作用户id
	OpUserName    string                 `protobuf:"bytes,3,opt,name=op_user_name,json=opUserName,proto3" json:"op_user_name,omitempty"` // 操作用户名
	OpTime        int64                  `protobuf:"varint,4,opt,name=op_time,json=opTime,proto3" json:"op_time,omitempty"`              // 操作秒级时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpInfoA) Reset() {
	*x = OpInfoA{}
	mi := &file_batch_job_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpInfoA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpInfoA) ProtoMessage() {}

func (x *OpInfoA) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpInfoA.ProtoReflect.Descriptor instead.
func (*OpInfoA) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{3}
}

func (x *OpInfoA) GetOpSource() string {
	if x != nil {
		return x.OpSource
	}
	return ""
}

func (x *OpInfoA) GetOpUserid() string {
	if x != nil {
		return x.OpUserid
	}
	return ""
}

func (x *OpInfoA) GetOpUserName() string {
	if x != nil {
		return x.OpUserName
	}
	return ""
}

func (x *OpInfoA) GetOpTime() int64 {
	if x != nil {
		return x.OpTime
	}
	return 0
}

// 业务信息-响应
type BizInfoA struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BizType               int32                  `protobuf:"varint,1,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`                                               // 业务类型. 必填
	BizName               string                 `protobuf:"bytes,2,opt,name=biz_name,json=bizName,proto3" json:"biz_name,omitempty"`                                                // 业务名
	Remark                string                 `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`                                                                 // 备注
	CbBeforeCreate        string                 `protobuf:"bytes,4,opt,name=cb_before_create,json=cbBeforeCreate,proto3" json:"cb_before_create,omitempty"`                         // 创建任务回调url
	CbBeforeRun           string                 `protobuf:"bytes,5,opt,name=cb_before_run,json=cbBeforeRun,proto3" json:"cb_before_run,omitempty"`                                  // 启动前回调. 一旦配置, 则任务必须由业务主动调用 BizStartJob 执行任务. 否则任务将一直处于 JobStatus.WaitBizRun 状态
	CbProcess             string                 `protobuf:"bytes,6,opt,name=cb_process,json=cbProcess,proto3" json:"cb_process,omitempty"`                                          // 处理任务回调
	CbProcessStop         string                 `protobuf:"bytes,7,opt,name=cb_process_stop,json=cbProcessStop,proto3" json:"cb_process_stop,omitempty"`                            // 处理任务停止回调. 用于业务方做一些清理
	CbBeforeCreateTimeout int32                  `protobuf:"varint,8,opt,name=cb_before_create_timeout,json=cbBeforeCreateTimeout,proto3" json:"cb_before_create_timeout,omitempty"` // 启动前回调超时秒数
	CbBeforeRunTimeout    int32                  `protobuf:"varint,9,opt,name=cb_before_run_timeout,json=cbBeforeRunTimeout,proto3" json:"cb_before_run_timeout,omitempty"`          // 启动前回调超时秒数
	CbProcessTimeout      int32                  `protobuf:"varint,10,opt,name=cb_process_timeout,json=cbProcessTimeout,proto3" json:"cb_process_timeout,omitempty"`                 // 处理任务回调超时秒数
	CbProcessStopTimeout  int32                  `protobuf:"varint,11,opt,name=cb_process_stop_timeout,json=cbProcessStopTimeout,proto3" json:"cb_process_stop_timeout,omitempty"`   // 处理任务停止回调超时秒数
	RateSec               int32                  `protobuf:"varint,12,opt,name=rate_sec,json=rateSec,proto3" json:"rate_sec,omitempty"`                                              // 每秒处理速率. 0表示不限制
	RateType              RateType               `protobuf:"varint,13,opt,name=rate_type,json=rateType,proto3,enum=batch_job.RateType" json:"rate_type,omitempty"`                   // 速率类型
	ExecType              ExecType               `protobuf:"varint,14,opt,name=exec_type,json=execType,proto3,enum=batch_job.ExecType" json:"exec_type,omitempty"`                   // 执行类型
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *BizInfoA) Reset() {
	*x = BizInfoA{}
	mi := &file_batch_job_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizInfoA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizInfoA) ProtoMessage() {}

func (x *BizInfoA) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizInfoA.ProtoReflect.Descriptor instead.
func (*BizInfoA) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{4}
}

func (x *BizInfoA) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *BizInfoA) GetBizName() string {
	if x != nil {
		return x.BizName
	}
	return ""
}

func (x *BizInfoA) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *BizInfoA) GetCbBeforeCreate() string {
	if x != nil {
		return x.CbBeforeCreate
	}
	return ""
}

func (x *BizInfoA) GetCbBeforeRun() string {
	if x != nil {
		return x.CbBeforeRun
	}
	return ""
}

func (x *BizInfoA) GetCbProcess() string {
	if x != nil {
		return x.CbProcess
	}
	return ""
}

func (x *BizInfoA) GetCbProcessStop() string {
	if x != nil {
		return x.CbProcessStop
	}
	return ""
}

func (x *BizInfoA) GetCbBeforeCreateTimeout() int32 {
	if x != nil {
		return x.CbBeforeCreateTimeout
	}
	return 0
}

func (x *BizInfoA) GetCbBeforeRunTimeout() int32 {
	if x != nil {
		return x.CbBeforeRunTimeout
	}
	return 0
}

func (x *BizInfoA) GetCbProcessTimeout() int32 {
	if x != nil {
		return x.CbProcessTimeout
	}
	return 0
}

func (x *BizInfoA) GetCbProcessStopTimeout() int32 {
	if x != nil {
		return x.CbProcessStopTimeout
	}
	return 0
}

func (x *BizInfoA) GetRateSec() int32 {
	if x != nil {
		return x.RateSec
	}
	return 0
}

func (x *BizInfoA) GetRateType() RateType {
	if x != nil {
		return x.RateType
	}
	return RateType_RateSec
}

func (x *BizInfoA) GetExecType() ExecType {
	if x != nil {
		return x.ExecType
	}
	return ExecType_Callback
}

// 任务基础信息-响应
type BaseInfoA struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	JobId            int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`                                    // 任务id
	BizType          int32                  `protobuf:"varint,2,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`                              // 业务类型
	BizData          string                 `protobuf:"bytes,3,opt,name=biz_data,json=bizData,proto3" json:"biz_data,omitempty"`                               // 业务任务数据, 让业务知道应该做什么
	ProcessDataTotal int64                  `protobuf:"varint,4,opt,name=process_data_total,json=processDataTotal,proto3" json:"process_data_total,omitempty"` // 业务中需要处理数据总数
	ProcessedNum     int64                  `protobuf:"varint,5,opt,name=processed_num,json=processedNum,proto3" json:"processed_num,omitempty"`               // 已处理过的数据量, 无论成功还是失败
	ErrLogNum        int64                  `protobuf:"varint,6,opt,name=err_log_num,json=errLogNum,proto3" json:"err_log_num,omitempty"`                      // 错误日志数
	Status           JobStatus              `protobuf:"varint,7,opt,name=status,proto3,enum=batch_job.JobStatus" json:"status,omitempty"`                      // 任务状态
	CreateTime       int64                  `protobuf:"varint,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                     // 创建时间秒级时间戳
	Op               *OpInfoA               `protobuf:"bytes,9,opt,name=op,proto3" json:"op,omitempty"`                                                        // 操作信息
	StatusInfo       string                 `protobuf:"bytes,10,opt,name=status_info,json=statusInfo,proto3" json:"status_info,omitempty"`                     // 状态信息
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BaseInfoA) Reset() {
	*x = BaseInfoA{}
	mi := &file_batch_job_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseInfoA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseInfoA) ProtoMessage() {}

func (x *BaseInfoA) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseInfoA.ProtoReflect.Descriptor instead.
func (*BaseInfoA) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{5}
}

func (x *BaseInfoA) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *BaseInfoA) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *BaseInfoA) GetBizData() string {
	if x != nil {
		return x.BizData
	}
	return ""
}

func (x *BaseInfoA) GetProcessDataTotal() int64 {
	if x != nil {
		return x.ProcessDataTotal
	}
	return 0
}

func (x *BaseInfoA) GetProcessedNum() int64 {
	if x != nil {
		return x.ProcessedNum
	}
	return 0
}

func (x *BaseInfoA) GetErrLogNum() int64 {
	if x != nil {
		return x.ErrLogNum
	}
	return 0
}

func (x *BaseInfoA) GetStatus() JobStatus {
	if x != nil {
		return x.Status
	}
	return JobStatus_Created
}

func (x *BaseInfoA) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *BaseInfoA) GetOp() *OpInfoA {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *BaseInfoA) GetStatusInfo() string {
	if x != nil {
		return x.StatusInfo
	}
	return ""
}

// 日志-请求
type DataLogQ struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataId        string                 `protobuf:"bytes,1,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`                                // 数据id
	Remark        string                 `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`                                              // 备注
	Extend        string                 `protobuf:"bytes,3,opt,name=extend,proto3" json:"extend,omitempty"`                                              // 扩展数据
	LogType       DataLogType            `protobuf:"varint,4,opt,name=log_type,json=logType,proto3,enum=batch_job.DataLogType" json:"log_type,omitempty"` // 日志类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataLogQ) Reset() {
	*x = DataLogQ{}
	mi := &file_batch_job_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataLogQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataLogQ) ProtoMessage() {}

func (x *DataLogQ) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataLogQ.ProtoReflect.Descriptor instead.
func (*DataLogQ) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{6}
}

func (x *DataLogQ) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

func (x *DataLogQ) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DataLogQ) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *DataLogQ) GetLogType() DataLogType {
	if x != nil {
		return x.LogType
	}
	return DataLogType_Debug
}

// 日志-响应
type DataLogA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataId        string                 `protobuf:"bytes,1,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`                                // 数据id
	Remark        string                 `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark,omitempty"`                                              // 备注
	Extend        string                 `protobuf:"bytes,3,opt,name=extend,proto3" json:"extend,omitempty"`                                              // 扩展数据
	LogType       DataLogType            `protobuf:"varint,4,opt,name=log_type,json=logType,proto3,enum=batch_job.DataLogType" json:"log_type,omitempty"` // 日志类型
	CreateTime    int64                  `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                   // 创建时间秒级时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataLogA) Reset() {
	*x = DataLogA{}
	mi := &file_batch_job_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataLogA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataLogA) ProtoMessage() {}

func (x *DataLogA) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataLogA.ProtoReflect.Descriptor instead.
func (*DataLogA) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{7}
}

func (x *DataLogA) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

func (x *DataLogA) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DataLogA) GetExtend() string {
	if x != nil {
		return x.Extend
	}
	return ""
}

func (x *DataLogA) GetLogType() DataLogType {
	if x != nil {
		return x.LogType
	}
	return DataLogType_Debug
}

func (x *DataLogA) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type AdminCreateJobReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BizType          int32                  `protobuf:"varint,1,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`                              // 业务类型. 必填
	BizData          string                 `protobuf:"bytes,2,opt,name=biz_data,json=bizData,proto3" json:"biz_data,omitempty"`                               // 业务任务数据, 让业务知道应该做什么
	BizProcessData   string                 `protobuf:"bytes,3,opt,name=biz_process_data,json=bizProcessData,proto3" json:"biz_process_data,omitempty"`        // 业务中需要处理的批量数据
	ProcessDataTotal int64                  `protobuf:"varint,4,opt,name=process_data_total,json=processDataTotal,proto3" json:"process_data_total,omitempty"` // 需要处理数据总数
	StartNow         bool                   `protobuf:"varint,5,opt,name=start_now,json=startNow,proto3" json:"start_now,omitempty"`                           // 创建后是否立即启动
	Op               *OpInfoQ               `protobuf:"bytes,6,opt,name=op,proto3" json:"op,omitempty"`                                                        // 操作信息
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AdminCreateJobReq) Reset() {
	*x = AdminCreateJobReq{}
	mi := &file_batch_job_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminCreateJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateJobReq) ProtoMessage() {}

func (x *AdminCreateJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateJobReq.ProtoReflect.Descriptor instead.
func (*AdminCreateJobReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{8}
}

func (x *AdminCreateJobReq) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *AdminCreateJobReq) GetBizData() string {
	if x != nil {
		return x.BizData
	}
	return ""
}

func (x *AdminCreateJobReq) GetBizProcessData() string {
	if x != nil {
		return x.BizProcessData
	}
	return ""
}

func (x *AdminCreateJobReq) GetProcessDataTotal() int64 {
	if x != nil {
		return x.ProcessDataTotal
	}
	return 0
}

func (x *AdminCreateJobReq) GetStartNow() bool {
	if x != nil {
		return x.StartNow
	}
	return false
}

func (x *AdminCreateJobReq) GetOp() *OpInfoQ {
	if x != nil {
		return x.Op
	}
	return nil
}

type AdminCreateJobRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"` // 创建的任务id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminCreateJobRsp) Reset() {
	*x = AdminCreateJobRsp{}
	mi := &file_batch_job_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminCreateJobRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminCreateJobRsp) ProtoMessage() {}

func (x *AdminCreateJobRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminCreateJobRsp.ProtoReflect.Descriptor instead.
func (*AdminCreateJobRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{9}
}

func (x *AdminCreateJobRsp) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

type AdminStartJobReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"` // 创建的任务id. 必填
	Op            *OpInfoQ               `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`                     // 操作信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminStartJobReq) Reset() {
	*x = AdminStartJobReq{}
	mi := &file_batch_job_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminStartJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminStartJobReq) ProtoMessage() {}

func (x *AdminStartJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminStartJobReq.ProtoReflect.Descriptor instead.
func (*AdminStartJobReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{10}
}

func (x *AdminStartJobReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *AdminStartJobReq) GetOp() *OpInfoQ {
	if x != nil {
		return x.Op
	}
	return nil
}

type AdminStartJobRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminStartJobRsp) Reset() {
	*x = AdminStartJobRsp{}
	mi := &file_batch_job_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminStartJobRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminStartJobRsp) ProtoMessage() {}

func (x *AdminStartJobRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminStartJobRsp.ProtoReflect.Descriptor instead.
func (*AdminStartJobRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{11}
}

type AdminStopJobReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"` // 创建的任务id. 必填
	Op            *OpInfoQ               `protobuf:"bytes,2,opt,name=op,proto3" json:"op,omitempty"`                     // 操作信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminStopJobReq) Reset() {
	*x = AdminStopJobReq{}
	mi := &file_batch_job_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminStopJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminStopJobReq) ProtoMessage() {}

func (x *AdminStopJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminStopJobReq.ProtoReflect.Descriptor instead.
func (*AdminStopJobReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{12}
}

func (x *AdminStopJobReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *AdminStopJobReq) GetOp() *OpInfoQ {
	if x != nil {
		return x.Op
	}
	return nil
}

type AdminStopJobRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminStopJobRsp) Reset() {
	*x = AdminStopJobRsp{}
	mi := &file_batch_job_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminStopJobRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminStopJobRsp) ProtoMessage() {}

func (x *AdminStopJobRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminStopJobRsp.ProtoReflect.Descriptor instead.
func (*AdminStopJobRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{13}
}

type QueryBizInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BizType       int32                  `protobuf:"varint,1,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"` // 创建的业务类型. 必填
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBizInfoReq) Reset() {
	*x = QueryBizInfoReq{}
	mi := &file_batch_job_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBizInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBizInfoReq) ProtoMessage() {}

func (x *QueryBizInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBizInfoReq.ProtoReflect.Descriptor instead.
func (*QueryBizInfoReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{14}
}

func (x *QueryBizInfoReq) GetBizType() int32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

type QueryBizInfoRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Line          *BizInfoA              `protobuf:"bytes,1,opt,name=line,proto3" json:"line,omitempty"` // 业务信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBizInfoRsp) Reset() {
	*x = QueryBizInfoRsp{}
	mi := &file_batch_job_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBizInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBizInfoRsp) ProtoMessage() {}

func (x *QueryBizInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBizInfoRsp.ProtoReflect.Descriptor instead.
func (*QueryBizInfoRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{15}
}

func (x *QueryBizInfoRsp) GetLine() *BizInfoA {
	if x != nil {
		return x.Line
	}
	return nil
}

type QueryBizListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间, 秒级时间戳. 0表示不限制
	EndTime       int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 结束时间, 秒级时间戳. 0表示不限制
	OpUser        string                 `protobuf:"bytes,3,opt,name=op_user,json=opUser,proto3" json:"op_user,omitempty"`           // 操作人
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`                            // 页号, 从1开始
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    // 每页返回数量, 最少返回5条
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBizListReq) Reset() {
	*x = QueryBizListReq{}
	mi := &file_batch_job_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBizListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBizListReq) ProtoMessage() {}

func (x *QueryBizListReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBizListReq.ProtoReflect.Descriptor instead.
func (*QueryBizListReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{16}
}

func (x *QueryBizListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryBizListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryBizListReq) GetOpUser() string {
	if x != nil {
		return x.OpUser
	}
	return ""
}

func (x *QueryBizListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryBizListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryBizListRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`                       // 总条数
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 当前分一页预期返回条数
	Line          []*BizInfoA            `protobuf:"bytes,3,rep,name=line,proto3" json:"line,omitempty"`                          // 业务信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBizListRsp) Reset() {
	*x = QueryBizListRsp{}
	mi := &file_batch_job_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBizListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBizListRsp) ProtoMessage() {}

func (x *QueryBizListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBizListRsp.ProtoReflect.Descriptor instead.
func (*QueryBizListRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{17}
}

func (x *QueryBizListRsp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryBizListRsp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryBizListRsp) GetLine() []*BizInfoA {
	if x != nil {
		return x.Line
	}
	return nil
}

type QueryJobBaseInfoReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"` // 创建的任务id. 必填
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryJobBaseInfoReq) Reset() {
	*x = QueryJobBaseInfoReq{}
	mi := &file_batch_job_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryJobBaseInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobBaseInfoReq) ProtoMessage() {}

func (x *QueryJobBaseInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobBaseInfoReq.ProtoReflect.Descriptor instead.
func (*QueryJobBaseInfoReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{18}
}

func (x *QueryJobBaseInfoReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

type QueryJobBaseInfoRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseInfo      *BaseInfoA             `protobuf:"bytes,1,opt,name=base_info,json=baseInfo,proto3" json:"base_info,omitempty"` // 任务基础信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryJobBaseInfoRsp) Reset() {
	*x = QueryJobBaseInfoRsp{}
	mi := &file_batch_job_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryJobBaseInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobBaseInfoRsp) ProtoMessage() {}

func (x *QueryJobBaseInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobBaseInfoRsp.ProtoReflect.Descriptor instead.
func (*QueryJobBaseInfoRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{19}
}

func (x *QueryJobBaseInfoRsp) GetBaseInfo() *BaseInfoA {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

type QueryJobListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`  // 开始时间, 秒级时间戳. 0表示不限制
	EndTime       int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`        // 结束时间, 秒级时间戳. 0表示不限制
	OpUser        string                 `protobuf:"bytes,3,opt,name=op_user,json=opUser,proto3" json:"op_user,omitempty"`            // 操作人
	BizType       []int32                `protobuf:"varint,4,rep,packed,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"` // 业务类型
	Page          int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`                             // 页号, 从1开始
	PageSize      int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`     // 每页返回数量, 最少返回5条
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryJobListReq) Reset() {
	*x = QueryJobListReq{}
	mi := &file_batch_job_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryJobListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobListReq) ProtoMessage() {}

func (x *QueryJobListReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobListReq.ProtoReflect.Descriptor instead.
func (*QueryJobListReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{20}
}

func (x *QueryJobListReq) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *QueryJobListReq) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *QueryJobListReq) GetOpUser() string {
	if x != nil {
		return x.OpUser
	}
	return ""
}

func (x *QueryJobListReq) GetBizType() []int32 {
	if x != nil {
		return x.BizType
	}
	return nil
}

func (x *QueryJobListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryJobListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type QueryJobListRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`                       // 总条数
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 当前分一页预期返回条数
	Line          []*BaseInfoA           `protobuf:"bytes,3,rep,name=line,proto3" json:"line,omitempty"`                          // 基础任务信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryJobListRsp) Reset() {
	*x = QueryJobListRsp{}
	mi := &file_batch_job_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryJobListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobListRsp) ProtoMessage() {}

func (x *QueryJobListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobListRsp.ProtoReflect.Descriptor instead.
func (*QueryJobListRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{21}
}

func (x *QueryJobListRsp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryJobListRsp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryJobListRsp) GetLine() []*BaseInfoA {
	if x != nil {
		return x.Line
	}
	return nil
}

type QueryJobDataLogReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`                                  // 创建的任务id. 必填
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                                                 // 页号, 从1开始
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                         // 每页返回数量, 最少返回5条
	LogType       DataLogType            `protobuf:"varint,4,opt,name=log_type,json=logType,proto3,enum=batch_job.DataLogType" json:"log_type,omitempty"` // 日志类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryJobDataLogReq) Reset() {
	*x = QueryJobDataLogReq{}
	mi := &file_batch_job_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryJobDataLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobDataLogReq) ProtoMessage() {}

func (x *QueryJobDataLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobDataLogReq.ProtoReflect.Descriptor instead.
func (*QueryJobDataLogReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{22}
}

func (x *QueryJobDataLogReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *QueryJobDataLogReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *QueryJobDataLogReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryJobDataLogReq) GetLogType() DataLogType {
	if x != nil {
		return x.LogType
	}
	return DataLogType_Debug
}

type QueryJobDataLogRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int32                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`                       // 总条数
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 当前分一页预期返回条数
	Log           []*DataLogA            `protobuf:"bytes,3,rep,name=log,proto3" json:"log,omitempty"`                            // 日志
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryJobDataLogRsp) Reset() {
	*x = QueryJobDataLogRsp{}
	mi := &file_batch_job_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryJobDataLogRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryJobDataLogRsp) ProtoMessage() {}

func (x *QueryJobDataLogRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryJobDataLogRsp.ProtoReflect.Descriptor instead.
func (*QueryJobDataLogRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{23}
}

func (x *QueryJobDataLogRsp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryJobDataLogRsp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryJobDataLogRsp) GetLog() []*DataLogA {
	if x != nil {
		return x.Log
	}
	return nil
}

type BizStartJobReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"` // 创建的任务id. 必填
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizStartJobReq) Reset() {
	*x = BizStartJobReq{}
	mi := &file_batch_job_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizStartJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizStartJobReq) ProtoMessage() {}

func (x *BizStartJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizStartJobReq.ProtoReflect.Descriptor instead.
func (*BizStartJobReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{24}
}

func (x *BizStartJobReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

type BizStartJobRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizStartJobRsp) Reset() {
	*x = BizStartJobRsp{}
	mi := &file_batch_job_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizStartJobRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizStartJobRsp) ProtoMessage() {}

func (x *BizStartJobRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizStartJobRsp.ProtoReflect.Descriptor instead.
func (*BizStartJobRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{25}
}

type BizStopJobReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"` // 创建的任务id. 必填
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizStopJobReq) Reset() {
	*x = BizStopJobReq{}
	mi := &file_batch_job_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizStopJobReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizStopJobReq) ProtoMessage() {}

func (x *BizStopJobReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizStopJobReq.ProtoReflect.Descriptor instead.
func (*BizStopJobReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{26}
}

func (x *BizStopJobReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

type BizStopJobRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizStopJobRsp) Reset() {
	*x = BizStopJobRsp{}
	mi := &file_batch_job_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizStopJobRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizStopJobRsp) ProtoMessage() {}

func (x *BizStopJobRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizStopJobRsp.ProtoReflect.Descriptor instead.
func (*BizStopJobRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{27}
}

type BizUpdateBizDataReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	JobId            int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`                                    // 创建的任务id. 必填
	BizData          string                 `protobuf:"bytes,2,opt,name=biz_data,json=bizData,proto3" json:"biz_data,omitempty"`                               // 业务任务数据, 让业务知道应该做什么. 空值则不会更新这个数据
	BizProcessData   string                 `protobuf:"bytes,3,opt,name=biz_process_data,json=bizProcessData,proto3" json:"biz_process_data,omitempty"`        // 业务中需要处理的批量数据. 空值则不会更新这个数据
	ProcessDataTotal int64                  `protobuf:"varint,4,opt,name=process_data_total,json=processDataTotal,proto3" json:"process_data_total,omitempty"` // 需要处理数据总数. 空值则不会更新这个数据
	ProcessedNum     int64                  `protobuf:"varint,5,opt,name=processed_num,json=processedNum,proto3" json:"processed_num,omitempty"`               // 已处理过的数据量, 无论成功还是失败. 空值则不会更新这个数据
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BizUpdateBizDataReq) Reset() {
	*x = BizUpdateBizDataReq{}
	mi := &file_batch_job_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizUpdateBizDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizUpdateBizDataReq) ProtoMessage() {}

func (x *BizUpdateBizDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizUpdateBizDataReq.ProtoReflect.Descriptor instead.
func (*BizUpdateBizDataReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{28}
}

func (x *BizUpdateBizDataReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *BizUpdateBizDataReq) GetBizData() string {
	if x != nil {
		return x.BizData
	}
	return ""
}

func (x *BizUpdateBizDataReq) GetBizProcessData() string {
	if x != nil {
		return x.BizProcessData
	}
	return ""
}

func (x *BizUpdateBizDataReq) GetProcessDataTotal() int64 {
	if x != nil {
		return x.ProcessDataTotal
	}
	return 0
}

func (x *BizUpdateBizDataReq) GetProcessedNum() int64 {
	if x != nil {
		return x.ProcessedNum
	}
	return 0
}

type BizUpdateBizDataRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizUpdateBizDataRsp) Reset() {
	*x = BizUpdateBizDataRsp{}
	mi := &file_batch_job_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizUpdateBizDataRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizUpdateBizDataRsp) ProtoMessage() {}

func (x *BizUpdateBizDataRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizUpdateBizDataRsp.ProtoReflect.Descriptor instead.
func (*BizUpdateBizDataRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{29}
}

type BizIncrProcessedNumReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"` // 创建的任务id. 必填
	Num           int64                  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`                  // 增加数量. 必填
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizIncrProcessedNumReq) Reset() {
	*x = BizIncrProcessedNumReq{}
	mi := &file_batch_job_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizIncrProcessedNumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizIncrProcessedNumReq) ProtoMessage() {}

func (x *BizIncrProcessedNumReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizIncrProcessedNumReq.ProtoReflect.Descriptor instead.
func (*BizIncrProcessedNumReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{30}
}

func (x *BizIncrProcessedNumReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *BizIncrProcessedNumReq) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type BizIncrProcessedNumRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizIncrProcessedNumRsp) Reset() {
	*x = BizIncrProcessedNumRsp{}
	mi := &file_batch_job_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizIncrProcessedNumRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizIncrProcessedNumRsp) ProtoMessage() {}

func (x *BizIncrProcessedNumRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizIncrProcessedNumRsp.ProtoReflect.Descriptor instead.
func (*BizIncrProcessedNumRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{31}
}

type BizAddDataLogReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"` // 创建的任务id. 必填
	Log           []*DataLogQ            `protobuf:"bytes,2,rep,name=log,proto3" json:"log,omitempty"`                   // 日志内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizAddDataLogReq) Reset() {
	*x = BizAddDataLogReq{}
	mi := &file_batch_job_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizAddDataLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizAddDataLogReq) ProtoMessage() {}

func (x *BizAddDataLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizAddDataLogReq.ProtoReflect.Descriptor instead.
func (*BizAddDataLogReq) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{32}
}

func (x *BizAddDataLogReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *BizAddDataLogReq) GetLog() []*DataLogQ {
	if x != nil {
		return x.Log
	}
	return nil
}

type BizAddDataLogRsp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BizAddDataLogRsp) Reset() {
	*x = BizAddDataLogRsp{}
	mi := &file_batch_job_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BizAddDataLogRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizAddDataLogRsp) ProtoMessage() {}

func (x *BizAddDataLogRsp) ProtoReflect() protoreflect.Message {
	mi := &file_batch_job_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizAddDataLogRsp.ProtoReflect.Descriptor instead.
func (*BizAddDataLogRsp) Descriptor() ([]byte, []int) {
	return file_batch_job_proto_rawDescGZIP(), []int{33}
}

var File_batch_job_proto protoreflect.FileDescriptor

const file_batch_job_proto_rawDesc = "" +
	"\n" +
	"\x0fbatch_job.proto\x12\tbatch_job\x1a\x1cgoogle/api/annotations.proto\x1a\x17validate/validate.proto\"\xa6\x05\n" +
	"\x13AdminRegistryBizReq\x12\"\n" +
	"\bbiz_type\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\abizType\x12\"\n" +
	"\bbiz_name\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\abizName\x12\x16\n" +
	"\x06remark\x18\x03 \x01(\tR\x06remark\x122\n" +
	"\x10cb_before_create\x18\x04 \x01(\tB\b\xfaB\x05r\x03\x88\x01\x01R\x0ecbBeforeCreate\x12,\n" +
	"\rcb_before_run\x18\x05 \x01(\tB\b\xfaB\x05r\x03\x88\x01\x01R\vcbBeforeRun\x12'\n" +
	"\n" +
	"cb_process\x18\x06 \x01(\tB\b\xfaB\x05r\x03\x88\x01\x01R\tcbProcess\x120\n" +
	"\x0fcb_process_stop\x18\a \x01(\tB\b\xfaB\x05r\x03\x88\x01\x01R\rcbProcessStop\x12@\n" +
	"\x18cb_before_create_timeout\x18\b \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x15cbBeforeCreateTimeout\x12:\n" +
	"\x15cb_before_run_timeout\x18\t \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x12cbBeforeRunTimeout\x125\n" +
	"\x12cb_process_timeout\x18\n" +
	" \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x10cbProcessTimeout\x12>\n" +
	"\x17cb_process_stop_timeout\x18\v \x01(\x05B\a\xfaB\x04\x1a\x02(\x00R\x14cbProcessStopTimeout\x12\x19\n" +
	"\brate_sec\x18\f \x01(\x05R\arateSec\x120\n" +
	"\trate_type\x18\r \x01(\x0e2\x13.batch_job.RateTypeR\brateType\x120\n" +
	"\texec_type\x18\x0e \x01(\x0e2\x13.batch_job.ExecTypeR\bexecType\"\x15\n" +
	"\x13AdminRegistryBizRsp\"e\n" +
	"\aOpInfoQ\x12\x1b\n" +
	"\top_source\x18\x01 \x01(\tR\bopSource\x12\x1b\n" +
	"\top_userid\x18\x02 \x01(\tR\bopUserid\x12 \n" +
	"\fop_user_name\x18\x03 \x01(\tR\n" +
	"opUserName\"~\n" +
	"\aOpInfoA\x12\x1b\n" +
	"\top_source\x18\x01 \x01(\tR\bopSource\x12\x1b\n" +
	"\top_userid\x18\x02 \x01(\tR\bopUserid\x12 \n" +
	"\fop_user_name\x18\x03 \x01(\tR\n" +
	"opUserName\x12\x17\n" +
	"\aop_time\x18\x04 \x01(\x03R\x06opTime\"\xbd\x04\n" +
	"\bBizInfoA\x12\x19\n" +
	"\bbiz_type\x18\x01 \x01(\x05R\abizType\x12\x19\n" +
	"\bbiz_name\x18\x02 \x01(\tR\abizName\x12\x16\n" +
	"\x06remark\x18\x03 \x01(\tR\x06remark\x12(\n" +
	"\x10cb_before_create\x18\x04 \x01(\tR\x0ecbBeforeCreate\x12\"\n" +
	"\rcb_before_run\x18\x05 \x01(\tR\vcbBeforeRun\x12\x1d\n" +
	"\n" +
	"cb_process\x18\x06 \x01(\tR\tcbProcess\x12&\n" +
	"\x0fcb_process_stop\x18\a \x01(\tR\rcbProcessStop\x127\n" +
	"\x18cb_before_create_timeout\x18\b \x01(\x05R\x15cbBeforeCreateTimeout\x121\n" +
	"\x15cb_before_run_timeout\x18\t \x01(\x05R\x12cbBeforeRunTimeout\x12,\n" +
	"\x12cb_process_timeout\x18\n" +
	" \x01(\x05R\x10cbProcessTimeout\x125\n" +
	"\x17cb_process_stop_timeout\x18\v \x01(\x05R\x14cbProcessStopTimeout\x12\x19\n" +
	"\brate_sec\x18\f \x01(\x05R\arateSec\x120\n" +
	"\trate_type\x18\r \x01(\x0e2\x13.batch_job.RateTypeR\brateType\x120\n" +
	"\texec_type\x18\x0e \x01(\x0e2\x13.batch_job.ExecTypeR\bexecType\"\xdf\x02\n" +
	"\tBaseInfoA\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\x03R\x05jobId\x12\x19\n" +
	"\bbiz_type\x18\x02 \x01(\x05R\abizType\x12\x19\n" +
	"\bbiz_data\x18\x03 \x01(\tR\abizData\x12,\n" +
	"\x12process_data_total\x18\x04 \x01(\x03R\x10processDataTotal\x12#\n" +
	"\rprocessed_num\x18\x05 \x01(\x03R\fprocessedNum\x12\x1e\n" +
	"\verr_log_num\x18\x06 \x01(\x03R\terrLogNum\x12,\n" +
	"\x06status\x18\a \x01(\x0e2\x14.batch_job.JobStatusR\x06status\x12\x1f\n" +
	"\vcreate_time\x18\b \x01(\x03R\n" +
	"createTime\x12\"\n" +
	"\x02op\x18\t \x01(\v2\x12.batch_job.OpInfoAR\x02op\x12\x1f\n" +
	"\vstatus_info\x18\n" +
	" \x01(\tR\n" +
	"statusInfo\"\x86\x01\n" +
	"\bDataLogQ\x12\x17\n" +
	"\adata_id\x18\x01 \x01(\tR\x06dataId\x12\x16\n" +
	"\x06remark\x18\x02 \x01(\tR\x06remark\x12\x16\n" +
	"\x06extend\x18\x03 \x01(\tR\x06extend\x121\n" +
	"\blog_type\x18\x04 \x01(\x0e2\x16.batch_job.DataLogTypeR\alogType\"\xa7\x01\n" +
	"\bDataLogA\x12\x17\n" +
	"\adata_id\x18\x01 \x01(\tR\x06dataId\x12\x16\n" +
	"\x06remark\x18\x02 \x01(\tR\x06remark\x12\x16\n" +
	"\x06extend\x18\x03 \x01(\tR\x06extend\x121\n" +
	"\blog_type\x18\x04 \x01(\x0e2\x16.batch_job.DataLogTypeR\alogType\x12\x1f\n" +
	"\vcreate_time\x18\x05 \x01(\x03R\n" +
	"createTime\"\xeb\x01\n" +
	"\x11AdminCreateJobReq\x12\"\n" +
	"\bbiz_type\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\abizType\x12\x19\n" +
	"\bbiz_data\x18\x02 \x01(\tR\abizData\x12(\n" +
	"\x10biz_process_data\x18\x03 \x01(\tR\x0ebizProcessData\x12,\n" +
	"\x12process_data_total\x18\x04 \x01(\x03R\x10processDataTotal\x12\x1b\n" +
	"\tstart_now\x18\x05 \x01(\bR\bstartNow\x12\"\n" +
	"\x02op\x18\x06 \x01(\v2\x12.batch_job.OpInfoQR\x02op\"*\n" +
	"\x11AdminCreateJobRsp\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\x03R\x05jobId\"V\n" +
	"\x10AdminStartJobReq\x12\x1e\n" +
	"\x06job_id\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\x12\"\n" +
	"\x02op\x18\x02 \x01(\v2\x12.batch_job.OpInfoQR\x02op\"\x12\n" +
	"\x10AdminStartJobRsp\"U\n" +
	"\x0fAdminStopJobReq\x12\x1e\n" +
	"\x06job_id\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\x12\"\n" +
	"\x02op\x18\x02 \x01(\v2\x12.batch_job.OpInfoQR\x02op\"\x11\n" +
	"\x0fAdminStopJobRsp\"5\n" +
	"\x0fQueryBizInfoReq\x12\"\n" +
	"\bbiz_type\x18\x01 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\abizType\":\n" +
	"\x0fQueryBizInfoRsp\x12'\n" +
	"\x04line\x18\x01 \x01(\v2\x13.batch_job.BizInfoAR\x04line\"\xa7\x01\n" +
	"\x0fQueryBizListReq\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\x03R\aendTime\x12\x17\n" +
	"\aop_user\x18\x03 \x01(\tR\x06opUser\x12\x1b\n" +
	"\x04page\x18\x04 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x04page\x12$\n" +
	"\tpage_size\x18\x05 \x01(\x05B\a\xfaB\x04\x1a\x02(\x05R\bpageSize\"m\n" +
	"\x0fQueryBizListRsp\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12'\n" +
	"\x04line\x18\x03 \x03(\v2\x13.batch_job.BizInfoAR\x04line\"5\n" +
	"\x13QueryJobBaseInfoReq\x12\x1e\n" +
	"\x06job_id\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\"H\n" +
	"\x13QueryJobBaseInfoRsp\x121\n" +
	"\tbase_info\x18\x01 \x01(\v2\x14.batch_job.BaseInfoAR\bbaseInfo\"\xd4\x01\n" +
	"\x0fQueryJobListReq\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\x03R\aendTime\x12\x17\n" +
	"\aop_user\x18\x03 \x01(\tR\x06opUser\x12+\n" +
	"\bbiz_type\x18\x04 \x03(\x05B\x10\xfaB\r\x92\x01\n" +
	"\x18\x01\"\x04\x1a\x02 \x00(\x01R\abizType\x12\x1b\n" +
	"\x04page\x18\x05 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x04page\x12$\n" +
	"\tpage_size\x18\x06 \x01(\x05B\a\xfaB\x04\x1a\x02(\x05R\bpageSize\"n\n" +
	"\x0fQueryJobListRsp\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12(\n" +
	"\x04line\x18\x03 \x03(\v2\x14.batch_job.BaseInfoAR\x04line\"\xaa\x01\n" +
	"\x12QueryJobDataLogReq\x12\x1e\n" +
	"\x06job_id\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\x12\x1b\n" +
	"\x04page\x18\x02 \x01(\x05B\a\xfaB\x04\x1a\x02 \x00R\x04page\x12$\n" +
	"\tpage_size\x18\x03 \x01(\x05B\a\xfaB\x04\x1a\x02(\x05R\bpageSize\x121\n" +
	"\blog_type\x18\x04 \x01(\x0e2\x16.batch_job.DataLogTypeR\alogType\"n\n" +
	"\x12QueryJobDataLogRsp\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x05R\x05total\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12%\n" +
	"\x03log\x18\x03 \x03(\v2\x13.batch_job.DataLogAR\x03log\"0\n" +
	"\x0eBizStartJobReq\x12\x1e\n" +
	"\x06job_id\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\"\x10\n" +
	"\x0eBizStartJobRsp\"/\n" +
	"\rBizStopJobReq\x12\x1e\n" +
	"\x06job_id\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\"\x0f\n" +
	"\rBizStopJobRsp\"\xcd\x01\n" +
	"\x13BizUpdateBizDataReq\x12\x1e\n" +
	"\x06job_id\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\x12\x19\n" +
	"\bbiz_data\x18\x02 \x01(\tR\abizData\x12(\n" +
	"\x10biz_process_data\x18\x03 \x01(\tR\x0ebizProcessData\x12,\n" +
	"\x12process_data_total\x18\x04 \x01(\x03R\x10processDataTotal\x12#\n" +
	"\rprocessed_num\x18\x05 \x01(\x03R\fprocessedNum\"\x15\n" +
	"\x13BizUpdateBizDataRsp\"S\n" +
	"\x16BizIncrProcessedNumReq\x12\x1e\n" +
	"\x06job_id\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\x12\x19\n" +
	"\x03num\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x03num\"\x18\n" +
	"\x16BizIncrProcessedNumRsp\"Y\n" +
	"\x10BizAddDataLogReq\x12\x1e\n" +
	"\x06job_id\x18\x01 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x05jobId\x12%\n" +
	"\x03log\x18\x02 \x03(\v2\x13.batch_job.DataLogQR\x03log\"\x12\n" +
	"\x10BizAddDataLogRsp**\n" +
	"\bRateType\x12\v\n" +
	"\aRateSec\x10\x00\x12\x11\n" +
	"\rSerialization\x10\x01*&\n" +
	"\bExecType\x12\f\n" +
	"\bCallback\x10\x00\x12\f\n" +
	"\bBizLocal\x10\x01*^\n" +
	"\tJobStatus\x12\v\n" +
	"\aCreated\x10\x00\x12\x0e\n" +
	"\n" +
	"WaitBizRun\x10\x01\x12\v\n" +
	"\aRunning\x10\x02\x12\f\n" +
	"\bFinished\x10\x03\x12\f\n" +
	"\bStopping\x10\x04\x12\v\n" +
	"\aStopped\x10\x05*5\n" +
	"\vDataLogType\x12\t\n" +
	"\x05Debug\x10\x00\x12\b\n" +
	"\x04Info\x10\x01\x12\b\n" +
	"\x04Warn\x10\x02\x12\a\n" +
	"\x03Err\x10\x032\xc8\f\n" +
	"\x0fBatchJobService\x12y\n" +
	"\x10AdminRegistryBiz\x12\x1e.batch_job.AdminRegistryBizReq\x1a\x1e.batch_job.AdminRegistryBizRsp\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/BatchJob/AdminRegistryBiz\x12q\n" +
	"\x0eAdminCreateJob\x12\x1c.batch_job.AdminCreateJobReq\x1a\x1c.batch_job.AdminCreateJobRsp\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/BatchJob/AdminCreateJob\x12m\n" +
	"\rAdminStartJob\x12\x1b.batch_job.AdminStartJobReq\x1a\x1b.batch_job.AdminStartJobRsp\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/BatchJob/AdminStartJob\x12i\n" +
	"\fAdminStopJob\x12\x1a.batch_job.AdminStopJobReq\x1a\x1a.batch_job.AdminStopJobRsp\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/BatchJob/AdminStopJob\x12i\n" +
	"\fQueryBizInfo\x12\x1a.batch_job.QueryBizInfoReq\x1a\x1a.batch_job.QueryBizInfoRsp\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/BatchJob/QueryBizInfo\x12i\n" +
	"\fQueryBizList\x12\x1a.batch_job.QueryBizListReq\x1a\x1a.batch_job.QueryBizListRsp\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/BatchJob/QueryBizList\x12y\n" +
	"\x10QueryJobBaseInfo\x12\x1e.batch_job.QueryJobBaseInfoReq\x1a\x1e.batch_job.QueryJobBaseInfoRsp\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/BatchJob/QueryJobBaseInfo\x12i\n" +
	"\fQueryJobList\x12\x1a.batch_job.QueryJobListReq\x1a\x1a.batch_job.QueryJobListRsp\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/BatchJob/QueryJobList\x12u\n" +
	"\x0fQueryJobDataLog\x12\x1d.batch_job.QueryJobDataLogReq\x1a\x1d.batch_job.QueryJobDataLogRsp\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/BatchJob/QueryJobDataLog\x12e\n" +
	"\vBizStartJob\x12\x19.batch_job.BizStartJobReq\x1a\x19.batch_job.BizStartJobRsp\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/BatchJob/BizStartJob\x12a\n" +
	"\n" +
	"BizStopJob\x12\x18.batch_job.BizStopJobReq\x1a\x18.batch_job.BizStopJobRsp\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/BatchJob/BizStopJob\x12y\n" +
	"\x10BizUpdateBizData\x12\x1e.batch_job.BizUpdateBizDataReq\x1a\x1e.batch_job.BizUpdateBizDataRsp\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/BatchJob/BizUpdateBizData\x12\x85\x01\n" +
	"\x13BizIncrProcessedNum\x12!.batch_job.BizIncrProcessedNumReq\x1a!.batch_job.BizIncrProcessedNumRsp\"(\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/BatchJob/BizIncrProcessedNum\x12m\n" +
	"\rBizAddDataLog\x12\x1b.batch_job.BizAddDataLogReq\x1a\x1b.batch_job.BizAddDataLogRsp\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/BatchJob/BizAddDataLogB\"Z github.com/zlyuancn/batch_job/pbb\x06proto3"

var (
	file_batch_job_proto_rawDescOnce sync.Once
	file_batch_job_proto_rawDescData []byte
)

func file_batch_job_proto_rawDescGZIP() []byte {
	file_batch_job_proto_rawDescOnce.Do(func() {
		file_batch_job_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_batch_job_proto_rawDesc), len(file_batch_job_proto_rawDesc)))
	})
	return file_batch_job_proto_rawDescData
}

var file_batch_job_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_batch_job_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_batch_job_proto_goTypes = []any{
	(RateType)(0),                  // 0: batch_job.RateType
	(ExecType)(0),                  // 1: batch_job.ExecType
	(JobStatus)(0),                 // 2: batch_job.JobStatus
	(DataLogType)(0),               // 3: batch_job.DataLogType
	(*AdminRegistryBizReq)(nil),    // 4: batch_job.AdminRegistryBizReq
	(*AdminRegistryBizRsp)(nil),    // 5: batch_job.AdminRegistryBizRsp
	(*OpInfoQ)(nil),                // 6: batch_job.OpInfoQ
	(*OpInfoA)(nil),                // 7: batch_job.OpInfoA
	(*BizInfoA)(nil),               // 8: batch_job.BizInfoA
	(*BaseInfoA)(nil),              // 9: batch_job.BaseInfoA
	(*DataLogQ)(nil),               // 10: batch_job.DataLogQ
	(*DataLogA)(nil),               // 11: batch_job.DataLogA
	(*AdminCreateJobReq)(nil),      // 12: batch_job.AdminCreateJobReq
	(*AdminCreateJobRsp)(nil),      // 13: batch_job.AdminCreateJobRsp
	(*AdminStartJobReq)(nil),       // 14: batch_job.AdminStartJobReq
	(*AdminStartJobRsp)(nil),       // 15: batch_job.AdminStartJobRsp
	(*AdminStopJobReq)(nil),        // 16: batch_job.AdminStopJobReq
	(*AdminStopJobRsp)(nil),        // 17: batch_job.AdminStopJobRsp
	(*QueryBizInfoReq)(nil),        // 18: batch_job.QueryBizInfoReq
	(*QueryBizInfoRsp)(nil),        // 19: batch_job.QueryBizInfoRsp
	(*QueryBizListReq)(nil),        // 20: batch_job.QueryBizListReq
	(*QueryBizListRsp)(nil),        // 21: batch_job.QueryBizListRsp
	(*QueryJobBaseInfoReq)(nil),    // 22: batch_job.QueryJobBaseInfoReq
	(*QueryJobBaseInfoRsp)(nil),    // 23: batch_job.QueryJobBaseInfoRsp
	(*QueryJobListReq)(nil),        // 24: batch_job.QueryJobListReq
	(*QueryJobListRsp)(nil),        // 25: batch_job.QueryJobListRsp
	(*QueryJobDataLogReq)(nil),     // 26: batch_job.QueryJobDataLogReq
	(*QueryJobDataLogRsp)(nil),     // 27: batch_job.QueryJobDataLogRsp
	(*BizStartJobReq)(nil),         // 28: batch_job.BizStartJobReq
	(*BizStartJobRsp)(nil),         // 29: batch_job.BizStartJobRsp
	(*BizStopJobReq)(nil),          // 30: batch_job.BizStopJobReq
	(*BizStopJobRsp)(nil),          // 31: batch_job.BizStopJobRsp
	(*BizUpdateBizDataReq)(nil),    // 32: batch_job.BizUpdateBizDataReq
	(*BizUpdateBizDataRsp)(nil),    // 33: batch_job.BizUpdateBizDataRsp
	(*BizIncrProcessedNumReq)(nil), // 34: batch_job.BizIncrProcessedNumReq
	(*BizIncrProcessedNumRsp)(nil), // 35: batch_job.BizIncrProcessedNumRsp
	(*BizAddDataLogReq)(nil),       // 36: batch_job.BizAddDataLogReq
	(*BizAddDataLogRsp)(nil),       // 37: batch_job.BizAddDataLogRsp
}
var file_batch_job_proto_depIdxs = []int32{
	0,  // 0: batch_job.AdminRegistryBizReq.rate_type:type_name -> batch_job.RateType
	1,  // 1: batch_job.AdminRegistryBizReq.exec_type:type_name -> batch_job.ExecType
	0,  // 2: batch_job.BizInfoA.rate_type:type_name -> batch_job.RateType
	1,  // 3: batch_job.BizInfoA.exec_type:type_name -> batch_job.ExecType
	2,  // 4: batch_job.BaseInfoA.status:type_name -> batch_job.JobStatus
	7,  // 5: batch_job.BaseInfoA.op:type_name -> batch_job.OpInfoA
	3,  // 6: batch_job.DataLogQ.log_type:type_name -> batch_job.DataLogType
	3,  // 7: batch_job.DataLogA.log_type:type_name -> batch_job.DataLogType
	6,  // 8: batch_job.AdminCreateJobReq.op:type_name -> batch_job.OpInfoQ
	6,  // 9: batch_job.AdminStartJobReq.op:type_name -> batch_job.OpInfoQ
	6,  // 10: batch_job.AdminStopJobReq.op:type_name -> batch_job.OpInfoQ
	8,  // 11: batch_job.QueryBizInfoRsp.line:type_name -> batch_job.BizInfoA
	8,  // 12: batch_job.QueryBizListRsp.line:type_name -> batch_job.BizInfoA
	9,  // 13: batch_job.QueryJobBaseInfoRsp.base_info:type_name -> batch_job.BaseInfoA
	9,  // 14: batch_job.QueryJobListRsp.line:type_name -> batch_job.BaseInfoA
	3,  // 15: batch_job.QueryJobDataLogReq.log_type:type_name -> batch_job.DataLogType
	11, // 16: batch_job.QueryJobDataLogRsp.log:type_name -> batch_job.DataLogA
	10, // 17: batch_job.BizAddDataLogReq.log:type_name -> batch_job.DataLogQ
	4,  // 18: batch_job.BatchJobService.AdminRegistryBiz:input_type -> batch_job.AdminRegistryBizReq
	12, // 19: batch_job.BatchJobService.AdminCreateJob:input_type -> batch_job.AdminCreateJobReq
	14, // 20: batch_job.BatchJobService.AdminStartJob:input_type -> batch_job.AdminStartJobReq
	16, // 21: batch_job.BatchJobService.AdminStopJob:input_type -> batch_job.AdminStopJobReq
	18, // 22: batch_job.BatchJobService.QueryBizInfo:input_type -> batch_job.QueryBizInfoReq
	20, // 23: batch_job.BatchJobService.QueryBizList:input_type -> batch_job.QueryBizListReq
	22, // 24: batch_job.BatchJobService.QueryJobBaseInfo:input_type -> batch_job.QueryJobBaseInfoReq
	24, // 25: batch_job.BatchJobService.QueryJobList:input_type -> batch_job.QueryJobListReq
	26, // 26: batch_job.BatchJobService.QueryJobDataLog:input_type -> batch_job.QueryJobDataLogReq
	28, // 27: batch_job.BatchJobService.BizStartJob:input_type -> batch_job.BizStartJobReq
	30, // 28: batch_job.BatchJobService.BizStopJob:input_type -> batch_job.BizStopJobReq
	32, // 29: batch_job.BatchJobService.BizUpdateBizData:input_type -> batch_job.BizUpdateBizDataReq
	34, // 30: batch_job.BatchJobService.BizIncrProcessedNum:input_type -> batch_job.BizIncrProcessedNumReq
	36, // 31: batch_job.BatchJobService.BizAddDataLog:input_type -> batch_job.BizAddDataLogReq
	5,  // 32: batch_job.BatchJobService.AdminRegistryBiz:output_type -> batch_job.AdminRegistryBizRsp
	13, // 33: batch_job.BatchJobService.AdminCreateJob:output_type -> batch_job.AdminCreateJobRsp
	15, // 34: batch_job.BatchJobService.AdminStartJob:output_type -> batch_job.AdminStartJobRsp
	17, // 35: batch_job.BatchJobService.AdminStopJob:output_type -> batch_job.AdminStopJobRsp
	19, // 36: batch_job.BatchJobService.QueryBizInfo:output_type -> batch_job.QueryBizInfoRsp
	21, // 37: batch_job.BatchJobService.QueryBizList:output_type -> batch_job.QueryBizListRsp
	23, // 38: batch_job.BatchJobService.QueryJobBaseInfo:output_type -> batch_job.QueryJobBaseInfoRsp
	25, // 39: batch_job.BatchJobService.QueryJobList:output_type -> batch_job.QueryJobListRsp
	27, // 40: batch_job.BatchJobService.QueryJobDataLog:output_type -> batch_job.QueryJobDataLogRsp
	29, // 41: batch_job.BatchJobService.BizStartJob:output_type -> batch_job.BizStartJobRsp
	31, // 42: batch_job.BatchJobService.BizStopJob:output_type -> batch_job.BizStopJobRsp
	33, // 43: batch_job.BatchJobService.BizUpdateBizData:output_type -> batch_job.BizUpdateBizDataRsp
	35, // 44: batch_job.BatchJobService.BizIncrProcessedNum:output_type -> batch_job.BizIncrProcessedNumRsp
	37, // 45: batch_job.BatchJobService.BizAddDataLog:output_type -> batch_job.BizAddDataLogRsp
	32, // [32:46] is the sub-list for method output_type
	18, // [18:32] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_batch_job_proto_init() }
func file_batch_job_proto_init() {
	if File_batch_job_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_batch_job_proto_rawDesc), len(file_batch_job_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_batch_job_proto_goTypes,
		DependencyIndexes: file_batch_job_proto_depIdxs,
		EnumInfos:         file_batch_job_proto_enumTypes,
		MessageInfos:      file_batch_job_proto_msgTypes,
	}.Build()
	File_batch_job_proto = out.File
	file_batch_job_proto_goTypes = nil
	file_batch_job_proto_depIdxs = nil
}
